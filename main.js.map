{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"update","dbs","main","kivi","init","Scheduler","N","push","data","Database","Main","setInterval","invalidate","I","nextFrame","write","vdom","injectComponent","document","body","addEventListener","./component/main","./data","kivi/lib/scheduler",2,"module","ENV","scheduler",3,"scheduleMicrotask","cb","action","utils","toFastObj","inherits","shallowEq","./env","./utils","./vdom",4,"_MutationObserverScheduler","this","_observer","window","MutationObserver","_node","createTextNode","observe","characterData","Frame","flags","writeTaskGroups","writeTasks","readTasks","afterTasks","dataClock","clock","_actions","_microtasks","_currentFrame","_nextFrame","self","_microtaskScheduler","S_MICROTASK_PENDING","S_RUNNING","tasks","performActions","_handleAnimationFrame","frame","groups","group","task","j","S_FRAMETASK_PENDING","F_WRITE_ANY","F_WRITE_PRIO","F_WRITE","F_READ","F_AFTER","prototype","requestNextTick","_toggle","priority","read","after","S_MICROTASK_RUNNING","S_FRAMETASK_RUNNING","RUNNING","FRAMETASK_RUNNING","MICROTASK_RUNNING","currentFrame","requestAnimationFrame","actions",5,"childCtor","parentCtor","tempCtor","constructor","b","key","keys","Object","hasOwnProperty",6,"VNode","tag","type","attrs","style","classes","children","ref","cref","text","content","V_TEXT","$text","element","V_ELEMENT","$element","svg","V_SVG","$svg","component","descriptor","V_COMPONENT","$component","root","V_ROOT","vNodeSameType","vNodeCreate","node","context","createElement","createElementNS","create","vNodeRender","il","className","classList","setAttribute","setProperty","join","add","vNodeInsertChild","vNodeUpdate","nodeValue","updateAttrs","updateStyle","updateClasses","updateData","updateChildren","aValue","bValue","removeAttribute","removeProperty","aCls","bCls","unchangedPosition","remove","aStart","bStart","aEnd","bEnd","removed","visited","Array","parent","nextRef","insertBefore","C_ATTACHED","vNodeAttached","vNodeMoveChild","vNodeRemoveChild","removeChild","vNodeDispose","dispose","vNodeAttach","vNodeDetach","vNodeDetached","attach","detach","aNode","bNode","updated","updateImplicitChildren","updateExplicitChildren","nextPos","next","pos","aStartNode","bStartNode","aEndNode","bEndNode","stop","lastTarget","outer","aLength","bLength","sources","moved","removeOffset","keyIndex","seq","_lis","v","c","p","slice","result","Component","C_DIRTY","rev","depth","_update","_invalidate","appendChild","TEXT","ELEMENT","COMPONENT","ROOT","SVG","C_SVG","C_MOUNTING","C_SHOULD_UPDATE_VIEW_FLAGS","DIRTY","ATTACHED","MOUNTING","SHOULD_UPDATE_VIEW_FLAGS","mount","updateState","updateView","updateRoot","newRoot","vNodeMount","bind","cancelTransientSubs","invalidated","detached","cancelSubs","disposed","attached","render","$t","$e","$s","$c","./scheduler",7,"_formatElapsed","str","parseFloat","toFixed","minutes","Math","floor","comps","value","split","seconds","lpad","ms","Entry","Popover","_IMPORTANT_CLASS","_WARNING_CLASS","_SUCCESS_CLASS","db","topFiveQueries","getTopFiveQueries","name","count","queries","qcSpan","qc","q","elapsed","popover","query","col","./popover",8,"_ROOT_CLASSES","rows","id","tbody","./entry",9,"arrow",10,"Query","waiting","_nextId","rand","random","qs","sort"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,GACxc,YAWA,SAASU,GAAOC,GACd,IAAK,GAAIV,GAAI,EAAGA,EAAIU,EAAIH,OAAQP,IAC9BU,EAAIV,GAAGS,SAQX,QAASE,KACPC,EAAKC,KAAK,GAAIC,GAGd,KAAK,GADDJ,MACKV,EAAI,EAAOe,EAAJf,EAAOA,IACrBU,EAAIM,KAAK,GAAIC,GAAKC,SAAS,UAAYlB,IACvCU,EAAIM,KAAK,GAAIC,GAAKC,SAAS,UAAYlB,EAAI,SAG7C,IAAIW,GAAO,GAAIQ,GAAK,KAAMT,EAAK,KAE/BU,aAAY,WACVX,EAAOC,GACPC,EAAKU,cACJC,GAEHV,EAAKW,YAAYC,MAAM,WACrBZ,EAAKa,KAAKC,gBAAgBf,EAAMgB,SAASC,QApC7C,GAAIN,GAAI,EACJP,EAAI,IAEJH,EAAOb,EAAQ,QACfe,EAAYf,EAAQ,sBAEpBkB,EAAOlB,EAAQ,UACfoB,EAAOpB,EAAQ,mBAQnB4B,UAASE,iBAAiB,mBAAoB,WAC5ClB,QAwBCmB,mBAAmB,EAAEC,SAAS,GAAGnB,KAAO,EAAEoB,qBAAqB,IAAIC,GAAG,SAASlC,EAAQmC,GAC1F,YAEA,IAAIC,IACFC,UAAW,KAGbF,GAAO7B,QAAU8B,OAEXE,GAAG,SAAStC,EAAQmC,GAC1B,YAMA,SAASrB,GAAKuB,GACZD,EAAIC,UAAYA,EAGlB,QAASb,KACP,MAAOY,GAAIC,UAAUb,YAGvB,QAASe,GAAkBC,GACzBJ,EAAIC,UAAUE,kBAAkBC,GAGlC,QAASC,GAAOD,GACdJ,EAAIC,UAAUI,OAAOD,GAjBvB,GAAIJ,GAAMpC,EAAQ,SACd0B,EAAO1B,EAAQ,UACf0C,EAAQ1C,EAAQ,UAkBpBmC,GAAO7B,SACL8B,IAAKA,EACLV,KAAMA,EACNZ,KAAMA,EACNU,UAAWA,EACXe,kBAAmBA,EACnBE,OAAQA,EACRE,UAAWD,EAAMC,UACjBC,SAAUF,EAAME,SAChBC,UAAWH,EAAMG,aAGhBC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,IAAIC,GAAG,SAASjD,EAAQmC,GAC1D,YAEA,SAASe,GAA2BV,GAClCW,KAAKC,UAAY,GAAIC,QAAOC,iBAAiBd,GAC7CW,KAAKI,MAAQ3B,SAAS4B,eAAe,IACrCL,KAAKC,UAAUK,QAAQN,KAAKI,OAAQG,eAAe,IAcrD,QAASC,KACPR,KAAKS,MAAQ,EACbT,KAAKU,mBACLV,KAAKW,WAAa,KAClBX,KAAKY,UAAY,KACjBZ,KAAKa,WAAa,KAmDpB,QAASjD,KACPoC,KAAKS,MAAQ,EACbT,KAAKc,UAAY,EACjBd,KAAKe,MAAQ,GAEbf,KAAKgB,SAAW,KAEhBhB,KAAKiB,YAAc,KACnBjB,KAAKkB,cAAgB,GAAIV,GACzBR,KAAKmB,WAAa,GAAIX,EAEtB,IAAIY,GAAOpB,IAEXA,MAAKqB,oBAAsB,GAAItB,GAA2B,WACxDqB,EAAKX,QAAUa,EACfF,EAAKX,OAASc,EACdH,EAAKL,OAEL,IAAIS,GAAQJ,EAAKH,WACjB,IAAa,MAATO,EAAe,CACjBJ,EAAKH,YAAc,IAEnB,KAAK,GAAInE,GAAI,EAAGA,EAAI0E,EAAMnE,OAAQP,IAChC0E,EAAM1E,KAIVsE,EAAKN,YACLM,EAAKK,iBACLL,EAAKX,QAAUc,IAGjBvB,KAAK0B,sBAAwB,WAC3B,GAAIC,GACAC,EACAC,EACAC,EACAhF,EAAGiF,CAEPX,GAAKX,QAAUuB,EACfZ,EAAKX,OAASc,EACdH,EAAKL,QAELY,EAAQP,EAAKD,WACbC,EAAKD,WAAaC,EAAKF,cACvBE,EAAKF,cAAgBS,CAErB,GAAG,CACD,KAAuC,KAA/BA,EAAMlB,MAAQwB,IAAoB,CACxC,GAAqC,KAAhCN,EAAMlB,MAAQyB,GAIjB,IAHAP,EAAMlB,QAAUyB,EAChBN,EAASD,EAAMjB,gBAEV5D,EAAI,EAAGA,EAAI8E,EAAOvE,OAAQP,IAE7B,GADA+E,EAAQD,EAAO9E,GACF,MAAT+E,EAEF,IADAD,EAAO9E,GAAK,KACPiF,EAAI,EAAGA,EAAIF,EAAMxE,OAAQ0E,KAC5BD,EAAOD,EAAME,KAOrB,IAAgC,KAA3BJ,EAAMlB,MAAQ0B,GAGjB,IAFAR,EAAMlB,QAAU0B,EAChBN,EAAQF,EAAMhB,WACT7D,EAAI,EAAGA,EAAI+E,EAAMxE,OAAQP,KAC5BgF,EAAOD,EAAM/E,MAMnB,KAAkC,KAA1B6E,EAAMlB,MAAQ2B,IAKpB,IAJAT,EAAMlB,QAAU2B,EAChBP,EAAQF,EAAMf,UACde,EAAMf,UAAY,KAEb9D,EAAI,EAAGA,EAAI+E,EAAMxE,OAAQP,KAC5BgF,EAAOD,EAAM/E,YAIsB,KAA/B6E,EAAMlB,MAAQwB,GAExB,MAAmC,KAA3BN,EAAMlB,MAAQ4B,IAIpB,IAHAV,EAAMlB,QAAU4B,EAEhBR,EAAQF,EAAMd,WACT/D,EAAI,EAAGA,EAAI+E,EAAMxE,OAAQP,KAC5BgF,EAAOD,EAAM/E,KAKjBsE,GAAKN,YACLM,EAAKK,iBACLL,EAAKX,QAAUc,GAtKnBxB,EAA2BuC,UAAUC,gBAAkB,WACrDvC,KAAKwC,SAAW,EAChBxC,KAAKI,MAAMrC,KAAOiC,KAAKwC,QAGzB,IAAIN,GAAe,EACfC,EAAU,EACVC,EAAS,GACTC,EAAU,GACVJ,EAAcE,EAAUD,CAU5B1B,GAAM8B,UAAUhE,MAAQ,SAASe,EAAIoD,GACnC,GAAIZ,EAIJ,IAFiB,SAAbY,IAAqBA,EAAW,IAEnB,KAAbA,EACFzC,KAAKS,OAAS0B,EACS,MAAnBnC,KAAKW,aACPX,KAAKW,eAEPX,KAAKW,WAAW7C,KAAKuB,OAChB,CAEL,IADAW,KAAKS,OAASyB,EACPO,GAAYzC,KAAKU,gBAAgBrD,QACtC2C,KAAKU,gBAAgB5C,KAAK,KAG5B+D,GAAQ7B,KAAKU,gBAAgB+B,GAChB,MAATZ,IACFA,EAAQ7B,KAAKU,gBAAgB+B,OAG/BZ,EAAM/D,KAAKuB,KAIfmB,EAAM8B,UAAUI,KAAO,SAASrD,GAC9BW,KAAKS,OAAS2B,EACQ,MAAlBpC,KAAKY,YACPZ,KAAKY,cAEPZ,KAAKY,UAAU9C,KAAKuB,IAGtBmB,EAAM8B,UAAUK,MAAQ,SAAStD,GAC/BW,KAAKS,OAAS4B,EACS,MAAnBrC,KAAKa,aACPb,KAAKa,eAEPb,KAAKa,WAAW/C,KAAKuB,GAGvB,IAAIkC,GAAY,EACZD,EAAsB,EACtBU,EAAsB,EACtBY,EAAsB,EACtBC,EAAsB,EAyG1BjF,GAAUkF,QAAUvB,EACpB3D,EAAUmF,kBAAoBF,EAC9BjF,EAAUoF,kBAAoBJ,EAE9BhF,EAAU0E,UAAUW,aAAe,WACjC,MAAOjD,MAAKkB,eAGdtD,EAAU0E,UAAUjE,UAAY,WAK9B,MAJ2C,MAAtC2B,KAAKS,MAAQuB,KAChBhC,KAAKS,OAASuB,EACd9B,OAAOgD,sBAAsBlD,KAAK0B,wBAE7B1B,KAAKmB,YAGdvD,EAAU0E,UAAUlD,kBAAoB,SAASC,GACJ,KAAtCW,KAAKS,MAAQa,KAChBtB,KAAKS,OAASa,EACdtB,KAAKqB,oBAAoBkB,mBAGH,MAApBvC,KAAKiB,cACPjB,KAAKiB,gBAGPjB,KAAKiB,YAAYnD,KAAKuB,IAGxBzB,EAAU0E,UAAUhD,OAAS,SAASD,GACO,KAAtCW,KAAKS,MAAQa,KAChBtB,KAAKS,OAASa,EACdtB,KAAKqB,oBAAoBkB,mBAGN,MAAjBvC,KAAKgB,WACPhB,KAAKgB,aAGPhB,KAAKgB,SAASlD,KAAKuB,IAGrBzB,EAAU0E,UAAUb,eAAiB,WACnC,KAAwB,MAAjBzB,KAAKgB,UAAkB,CAC5B,GAAImC,GAAUnD,KAAKgB,QACnBhB,MAAKgB,SAAW,IAChB,KAAK,GAAIlE,GAAI,EAAGA,EAAIqG,EAAQ9F,OAAQP,IAClCqG,EAAQrG,OAKdkC,EAAO7B,QAAUS,OAEXwF,GAAG,SAASvG,EAAQmC,EAAO7B,GACjC,YAEA,SAASqC,GAAU9C,GAEjB,QAASK,MAET,MADAA,GAAEuF,UAAY5F,EACPA,EAIT,QAAS+C,GAAS4D,EAAWC,GAE3B,QAASC,MACTA,EAASjB,UAAYgB,EAAWhB,UAChCe,EAAUf,UAAY,GAAIiB,GAC1BF,EAAUf,UAAUkB,YAAcH,EAGpC,QAAS3D,GAAU9C,EAAG6G,GACpB,GAAI3G,GACA4G,EACAC,CAGJ,KADAA,EAAOC,OAAOD,KAAK/G,GACdE,EAAI,EAAGA,EAAI6G,EAAKtG,OAAQP,IAE3B,GADA4G,EAAMC,EAAK7G,IACN2G,EAAEI,eAAeH,IAAQ9G,EAAE8G,KAASD,EAAEC,GACzC,OAAO,CAKX,KADAC,EAAOC,OAAOD,KAAKF,GACd3G,EAAI,EAAGA,EAAI6G,EAAKtG,OAAQP,IAC3B,IAAKF,EAAEiH,eAAeH,GACpB,OAAO,CAGX,QAAO,EAGT1E,EAAO7B,SACLqC,UAAWA,EACXC,SAAUA,EACVC,UAAWA,QAGPoE,GAAG,SAASjH,EAAQmC,GAC1B,YAkCA,SAAS+E,GAAMtD,EAAOiD,EAAKM,EAAKjG,GAC9BiC,KAAKS,MAAQA,EACbT,KAAK0D,IAAMA,EACX1D,KAAKgE,IAAMA,EACXhE,KAAKjC,KAAOA,EAMZiC,KAAKiE,KAAO,KAKZjE,KAAKkE,MAAQ,KAKblE,KAAKmE,MAAQ,KAKbnE,KAAKoE,QAAU,KAOfpE,KAAKqE,SAAW,KAOhBrE,KAAKsE,IAAM,KAOXtE,KAAKuE,KAAO,KASd,QAASC,GAAKC,GACZ,MAAO,IAAIV,GAAMW,EAAQ,KAAM,KAAMD,GAGvC,QAASE,GAAMjB,EAAKe,GAClB,MAAO,IAAIV,GAAMW,EAAQhB,EAAK,KAAMe,GAGtC,QAASG,GAAQZ,GACf,MAAO,IAAID,GAAMc,EAAW,KAAMb,EAAK,MAGzC,QAASc,GAASpB,EAAKM,GACrB,MAAO,IAAID,GAAMc,EAAWnB,EAAKM,EAAK,MAGxC,QAASe,GAAIf,GACX,MAAO,IAAID,GAAMc,EAAYG,EAAO,KAAMhB,EAAK,MAGjD,QAASiB,GAAKvB,EAAKM,GACjB,MAAO,IAAID,GAAMc,EAAYG,EAAOtB,EAAKM,EAAK,MAGhD,QAASkB,GAAUC,EAAYpH,GAE7B,MADa,UAATA,IAAiBA,EAAO,MACrB,GAAIgG,GAAMqB,EAAa,KAAMD,EAAYpH,GAGlD,QAASsH,GAAW3B,EAAKyB,EAAYpH,GAEnC,MADa,UAATA,IAAiBA,EAAO,MACrB,GAAIgG,GAAMqB,EAAa1B,EAAKyB,EAAYpH,GAGjD,QAASuH,KACP,MAAO,IAAIvB,GAAMwB,EAAQ,KAAM,KAAM,MAUvC,QAASC,GAAc5I,EAAG6G,GACxB,MAAQ7G,GAAE6D,QAAUgD,EAAEhD,OAAS7D,EAAEoH,MAAQP,EAAEO,IAU7C,QAASyB,GAAYC,EAAMC,GACzB,GAAIlF,GAAQiF,EAAKjF,KAEjB,IAAyB,KAApBA,EAAQiE,GACXgB,EAAKpB,IAAM7F,SAAS4B,eAAeqF,EAAK3H,UACnC,IAA4B,KAAvB0C,EAAQoE,GAEhBa,EAAKpB,IADiB,KAAnB7D,EAAQuE,GACAvG,SAASmH,cAAcF,EAAK1B,KAE5BvF,SAASoH,gBAAgB,6BAA8BH,EAAK1B,SAEpE,IAA8B,KAAzBvD,EAAQ2E,GAAoB,CACtC,GAAIF,GAAY,GAAIQ,GAAK1B,IAAI2B,EAASD,EAAK3H,KAAM2H,EAAKrB,SACtDa,GAAUY,SACVZ,EAAUvH,OACV+H,EAAKpB,IAAMY,EAAUN,QACrBc,EAAKnB,KAAOW,GAUhB,QAASa,GAAYL,EAAMC,GACzB,GAAI7I,GAAGkJ,EACHtC,EACAC,EAEAW,EACAH,EACA8B,EACAC,EAJAzF,EAAQiF,EAAKjF,KAMjB,IAAqD,KAAhDA,GAASoE,EAAYO,EAAcG,IAAgB,CAEtD,GADAjB,EAAMoB,EAAKpB,IACO,MAAdoB,EAAKxB,MAEP,IADAP,EAAOC,OAAOD,KAAK+B,EAAKxB,OACnBpH,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACXwH,EAAI6B,aAAazC,EAAKgC,EAAKxB,MAAMR,GAIrC,IAAkB,MAAdgC,EAAKvB,MAGP,IAFAA,EAAQG,EAAIH,MACZR,EAAOC,OAAOD,KAAK+B,EAAKvB,OACnBrH,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACXqH,EAAMiC,YAAY1C,EAAKgC,EAAKvB,MAAMT,GAItC,IAA4C,KAAvCjD,GAASoE,EAAYO,IAAqB,CAK7C,GAJAa,EAAY,KACK,MAAbP,EAAKzB,OACPgC,EAAYP,EAAKzB,MAEC,MAAhByB,EAAKtB,QAAiB,CACxB,GAAIA,GAAUsB,EAAKtB,QAAQiC,KAAK,IAChCJ,GAA0B,MAAbA,EAAqB7B,EAAU6B,EAAY,IAAM7B,EAE/C,MAAb6B,IACFP,EAAK3H,KAAOkI,EACZ3B,EAAI2B,UAAYA,OASlB,IANAC,EAAY,KACK,MAAbR,EAAKzB,OACPiC,EAAY5B,EAAI4B,UAChBA,EAAUI,IAAIZ,EAAKzB,OAGD,MAAhByB,EAAKtB,QAKP,IAJiB,MAAb8B,IACFA,EAAY5B,EAAI4B,WAGbpJ,EAAI,EAAGkJ,EAAKN,EAAKtB,QAAQ/G,OAAY2I,EAAJlJ,EAAQA,IAC5CoJ,EAAUI,IAAIZ,EAAKtB,QAAQtH,GAKjC,IAA8B,KAAzB2D,EAAQ2E,GACXM,EAAKnB,KAAKhH,aACL,IAAqB,MAAjBmI,EAAKrB,SACd,IAAKvH,EAAI,EAAGkJ,EAAKN,EAAKrB,SAAShH,OAAY2I,EAAJlJ,EAAQA,IAC7CyJ,EAAiBb,EAAMA,EAAKrB,SAASvH,GAAI,KAAM6I,IAevD,QAASa,GAAY5J,EAAG6G,EAAGkC,GACzB,GAEIvB,GACA6B,EACAf,EAJAZ,EAAM1H,EAAE0H,IACR7D,EAAQ7D,EAAE6D,KAKdgD,GAAEa,IAAMA,EAEiB,KAApB7D,EAAQiE,GACP9H,EAAEmB,MAAQ0F,EAAE1F,OACdnB,EAAE0H,IAAImC,UAAYhD,EAAE1F,MAEoC,KAAhD0C,GAASoE,EAAYO,EAAcG,MACzC3I,EAAEsH,QAAUT,EAAES,OAChBwC,EAAY9J,EAAEsH,MAAOT,EAAES,MAAOI,GAE5B1H,EAAEuH,QAAUV,EAAEU,OAChBwC,EAAY/J,EAAEuH,MAAOV,EAAEU,MAAOG,EAAIH,OAGR,KAAvB1D,EAAQoE,GACPjI,EAAEwH,UAAYX,EAAEW,SACJ,MAAVX,EAAE1F,OACJkI,EAAYxC,EAAEQ,KACG,MAAbR,EAAEW,UACJA,EAAUX,EAAEW,QAAQiC,KAAK,KACzBJ,EAA0B,MAAbA,EAAqB7B,EAAU6B,EAAY,IAAM7B,GAEhEX,EAAE1F,KAAOkI,GAEPrJ,EAAEmB,OAAS0F,EAAE1F,OAEbuG,EAAI2B,UADQ,MAAVxC,EAAE1F,KACY,GAEAkI,IAIpBxC,EAAE1F,KAAOnB,EAAEmB,KAEJnB,EAAEwH,UAAYX,EAAEW,SACzBwC,EAAchK,EAAEwH,QAASX,EAAEW,QAASE,EAAI4B,WAGZ,KAAzBzF,EAAQ2E,IACXF,EAAYzB,EAAEc,KAAO3H,EAAE2H,KACvBW,EAAU2B,WAAWpD,EAAE1F,MACvBmH,EAAU4B,eAAerD,EAAEY,UAC3Ba,EAAU3H,UAEVuJ,EAAelK,EAAGA,EAAEyH,SAAUZ,EAAEY,SAAUsB,IAYhD,QAASe,GAAY9J,EAAG6G,EAAGiC,GACzB,GAAI5I,GAAGkJ,EACHtC,EACAC,EACAoD,EACAC,CAEJ,IAAS,MAALpK,EACF,GAAS,MAAL6G,EAGF,IADAE,EAAOC,OAAOD,KAAK/G,GACdE,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4I,EAAKuB,gBAAgBtD,EAAK7G,QAEvB,CAGL,IADA6G,EAAOC,OAAOD,KAAK/G,GACdE,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACP2G,EAAEI,eAAeH,IACnBqD,EAASnK,EAAE8G,GACXsD,EAASvD,EAAEC,GACPqD,IAAWC,GACbtB,EAAKS,aAAazC,EAAKsD,IAGzBtB,EAAKuB,gBAAgBvD,EAMzB,KADAC,EAAOC,OAAOD,KAAKF,GACd3G,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACNF,EAAEiH,eAAeH,IACpBgC,EAAKS,aAAazC,EAAKD,EAAEC,QAI1B,IAAS,MAALD,EAGT,IADAE,EAAOC,OAAOD,KAAKF,GACd3G,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACX4I,EAAKS,aAAazC,EAAKD,EAAEC,IAY/B,QAASiD,GAAY/J,EAAG6G,EAAGU,GACzB,GAAIrH,GAAGkJ,EACHtC,EACAC,CAEJ,IAAS,MAAL/G,EACF,GAAS,MAAL6G,EAGF,IADAE,EAAOC,OAAOD,KAAK/G,GACdE,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpCqH,EAAM+C,eAAevD,EAAK7G,QAEvB,CAGL,IADA6G,EAAOC,OAAOD,KAAK/G,GACdE,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACP2G,EAAEI,eAAeH,GACnBS,EAAMiC,YAAY1C,EAAKD,EAAEC,GAAM,IAE/BS,EAAM+C,eAAexD,EAMzB,KADAC,EAAOC,OAAOD,KAAKF,GACd3G,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACNF,EAAEiH,eAAeH,IACpBS,EAAMiC,YAAY1C,EAAKD,EAAEC,GAAM,QAIhC,IAAS,MAALD,EAGT,IADAE,EAAOC,OAAOD,KAAKF,GACd3G,EAAI,EAAGkJ,EAAKrC,EAAKtG,OAAY2I,EAAJlJ,EAAQA,IACpC4G,EAAMC,EAAK7G,GACXqH,EAAMiC,YAAY1C,EAAKD,EAAEC,GAAM,IAYrC,QAASkD,GAAchK,EAAG6G,EAAGyC,GAC3B,GAAIpJ,GACAqK,EAAMC,EACNC,CAEJ,IAAS,MAALzK,GAA0B,IAAbA,EAAES,OACjB,GAAS,MAALoG,GAA0B,IAAbA,EAAEpG,OAEjB,IAAKP,EAAI,EAAGA,EAAIF,EAAES,OAAQP,IACxBoJ,EAAUoB,OAAO1K,EAAEE,QAGrB,IAAiB,IAAbF,EAAES,QAA6B,IAAboG,EAAEpG,OAEtB8J,EAAOvK,EAAE,GACTwK,EAAO3D,EAAE,GAEL0D,IAASC,IACXlB,EAAUoB,OAAOH,GACjBjB,EAAUI,IAAIc,QAEX,IAAiB,IAAbxK,EAAES,OAAc,CAIzB,IAFA8J,EAAOvK,EAAE,GACTyK,EAAoB,GACfvK,EAAI,EAAGA,EAAI2G,EAAEpG,OAAQP,IAAK,CAE7B,GADAsK,EAAO3D,EAAE3G,GACLqK,IAASC,EAAM,CACjBC,EAAoBvK,CACpB,OAEAoJ,EAAUI,IAAIc,GAGlB,GAA0B,KAAtBC,EACF,IAAKvK,EAAIuK,EAAoB,EAAGvK,EAAI2G,EAAEpG,OAAQP,IAC5CoJ,EAAUI,IAAI7C,EAAE3G,QAGlBoJ,GAAUoB,OAAOH,OAEd,IAAiB,IAAb1D,EAAEpG,OAAc,CAIzB,IAFA+J,EAAO3D,EAAE,GACT4D,EAAoB,GACfvK,EAAI,EAAGA,EAAIF,EAAES,OAAQP,IAAK,CAE7B,GADAqK,EAAOvK,EAAEE,GACLqK,IAASC,EAAM,CACjBC,EAAoBvK,CACpB,OAEAoJ,EAAUoB,OAAOH,GAGrB,GAA0B,KAAtBE,EACF,IAAKvK,EAAIuK,EAAoB,EAAGvK,EAAIF,EAAES,OAAQP,IAC5CoJ,EAAUoB,OAAO1K,EAAEE,QAGrBoJ,GAAUI,IAAIc,OAEX,CASL,IAPA,GAKIrF,GALAwF,EAAS,EACTC,EAAS,EACTC,EAAO7K,EAAES,OAAS,EAClBqK,EAAOjE,EAAEpG,OAAS,EAClBsK,GAAU,EAGGF,GAAVF,GAA4BG,GAAVF,GACnB5K,EAAE2K,KAAY9D,EAAE+D,IAIpBD,IACAC,GAGF,MAAiBC,GAAVF,GAA4BG,GAAVF,GACnB5K,EAAE6K,KAAUhE,EAAEiE,IAIlBD,IACAC,GAGF,IAAIE,GAAU,GAAIC,OAAMH,EAAOF,EAAS,EAExC,KAAK1K,EAAIyK,EAAaE,GAAL3K,EAAWA,IAAK,CAI/B,IAHAqK,EAAOvK,EAAEE,GACT6K,GAAU,EAEL5F,EAAIyF,EAAaE,GAAL3F,EAAWA,IAG1B,GAFAqF,EAAO3D,EAAE1B,GAELoF,GAAQC,EAAM,CAChBO,GAAU,EACVC,EAAQ7F,EAAIyF,IAAU,CACtB,OAIAG,GACFzB,EAAUoB,OAAOH,GAIrB,IAAKrK,EAAI0K,EAAaE,GAAL5K,EAAWA,IACrB8K,EAAQ9K,EAAI0K,IACftB,EAAUI,IAAI7C,EAAE3G,QAKnB,IAAS,MAAL2G,GAAaA,EAAEpG,OAAS,EAEjC,IAAKP,EAAI,EAAGA,EAAI2G,EAAEpG,OAAQP,IACxBoJ,EAAUI,IAAI7C,EAAE3G,IAatB,QAASyJ,GAAiBuB,EAAQpC,EAAMqC,EAASpC,GAC/CF,EAAYC,EAAMC,GAClBmC,EAAOxD,IAAI0D,aAAatC,EAAKpB,IAAKyD,GACG,KAAhCpC,EAAQlF,MAAQwH,IACnBC,EAAcxC,GAEhBK,EAAYL,EAAMC,GAUpB,QAASwC,GAAeL,EAAQpC,EAAMqC,GACpCD,EAAOxD,IAAI0D,aAAatC,EAAKpB,IAAKyD,GASpC,QAASK,GAAiBN,EAAQpC,GAChCoC,EAAOxD,IAAI+D,YAAY3C,EAAKpB,KAC5BgE,EAAa5C,GAGf,QAAS4C,GAAa5C,GACpB,GAAmC,KAA9BA,EAAKjF,MAAQ2E,GAChBM,EAAKnB,KAAKgE,cACL,IAAqB,MAAjB7C,EAAKrB,SACd,IAAK,GAAIvH,GAAI,EAAGA,EAAI4I,EAAKrB,SAAShH,OAAQP,IACxCwL,EAAa5C,EAAKrB,SAASvH,IAKjC,QAAS0L,GAAY9C,GAEnB,GADAwC,EAAcxC,GACsB,KAA9BA,EAAKjF,MAAQ2E,IAAyC,MAAjBM,EAAKrB,SAC9C,IAAK,GAAIvH,GAAI,EAAGA,EAAI4I,EAAKrB,SAAShH,OAAQP,IACxC0L,EAAY9C,EAAKrB,SAASvH,IAKhC,QAAS2L,GAAY/C,GACnB,GAAoC,KAA9BA,EAAKjF,MAAQ2E,IAAyC,MAAjBM,EAAKrB,SAC9C,IAAK,GAAIvH,GAAI,EAAGA,EAAI4I,EAAKrB,SAAShH,OAAQP,IACxC0L,EAAY9C,EAAKrB,SAASvH,GAG9B4L,GAAchD,GAGhB,QAASwC,GAAcxC,GACc,KAA9BA,EAAKjF,MAAQ2E,IAChBM,EAAKnB,KAAKoE,SAId,QAASD,GAAchD,GACc,KAA9BA,EAAKjF,MAAQ2E,IAChBM,EAAKnB,KAAKqE,SAsBd,QAAS9B,GAAegB,EAAQlL,EAAG6G,EAAGkC,GACpC,GAAIkD,GACAC,EACAhM,EAAI,EACJiM,GAAU,CAEd,IAAS,MAALnM,GAA0B,IAAbA,EAAES,OACjB,GAAS,MAALoG,GAA0B,IAAbA,EAAEpG,OAEjB,KAAMP,EAAIF,EAAES,QACV+K,EAAiBN,EAAQlL,EAAEE,UAG7B,IAAiB,IAAbF,EAAES,QAA6B,IAAboG,EAAEpG,OAEtBwL,EAAQjM,EAAE,GACVkM,EAAQrF,EAAE,GAGQ,MAAboF,EAAMnF,KAAe8B,EAAcqD,EAAOC,IAC7B,MAAbD,EAAMnF,KAAemF,EAAMnF,MAAQoF,EAAMpF,IAC5C8C,EAAYqC,EAAOC,EAAOnD,IAE1ByC,EAAiBN,EAAQe,GACzBtC,EAAiBuB,EAAQgB,EAAO,KAAMnD,QAEnC,IAAiB,IAAb/I,EAAES,OAAc,CAGzB,GADAwL,EAAQjM,EAAE,GACO,MAAbiM,EAAMnF,IACR,KAAO5G,EAAI2G,EAAEpG,QAAQ,CAEnB,GADAyL,EAAQrF,EAAE3G,KACN0I,EAAcqD,EAAOC,GAAQ,CAC/BtC,EAAYqC,EAAOC,EAAOnD,GAC1BoD,GAAU,CACV,OAEFxC,EAAiBuB,EAAQgB,EAAOD,EAAMvE,IAAKqB,OAG7C,MAAO7I,EAAI2G,EAAEpG,QAAQ,CAEnB,GADAyL,EAAQrF,EAAE3G,KACN+L,EAAMnF,MAAQoF,EAAMpF,IAAK,CAC3B8C,EAAYqC,EAAOC,EAAOnD,GAC1BoD,GAAU,CACV,OAEFxC,EAAiBuB,EAAQgB,EAAOD,EAAMvE,IAAKqB,GAG/C,GAAIoD,EACF,KAAOjM,EAAI2G,EAAEpG,QACXkJ,EAAiBuB,EAAQrE,EAAE3G,KAAM,KAAM6I,OAGzCyC,GAAiBN,EAAQe,OAEtB,IAAiB,IAAbpF,EAAEpG,OAAc,CAGzB,GADAyL,EAAQrF,EAAE,GACO,MAAbqF,EAAMpF,IACR,KAAO5G,EAAIF,EAAES,QAAQ,CAEnB,GADAwL,EAAQjM,EAAEE,KACN0I,EAAcqD,EAAOC,GAAQ,CAC/BtC,EAAYqC,EAAOC,EAAOnD,GAC1BoD,GAAU,CACV,OAEFX,EAAiBN,EAAQe,OAG3B,MAAO/L,EAAIF,EAAES,QAAQ,CAEnB,GADAwL,EAAQjM,EAAEE,KACN+L,EAAMnF,MAAQoF,EAAMpF,IAAK,CAC3B8C,EAAYqC,EAAOC,EAAOnD,GAC1BoD,GAAU,CACV,OAEFX,EAAiBN,EAAQe,GAI7B,GAAIE,EACF,KAAOjM,EAAIF,EAAES,QACX+K,EAAiBN,EAAQlL,EAAEE,UAG7ByJ,GAAiBuB,EAAQgB,EAAO,KAAMnD,OAIxB,OAAZ/I,EAAE,GAAG8G,IACPsF,EAAuBlB,EAAQlL,EAAG6G,EAAGkC,GAErCsD,EAAuBnB,EAAQlL,EAAG6G,EAAGkC,OAItC,IAAS,MAALlC,GAAaA,EAAEpG,OAAS,EAEjC,IAAKP,EAAI,EAAGA,EAAI2G,EAAEpG,OAAQP,IACxByJ,EAAiBuB,EAAQrE,EAAE3G,GAAI,KAAM6I,GAkB3C,QAASqD,GAAuBlB,EAAQlL,EAAG6G,EAAGkC,GAW5C,IAVA,GAIIkD,GACAC,EACAI,EACAC,EAPA5B,EAAS,EACTC,EAAS,EACTC,EAAO7K,EAAES,OAAS,EAClBqK,EAAOjE,EAAEpG,OAAS,EAOLoK,GAAVF,GAA4BG,GAAVF,IACvBqB,EAAQjM,EAAE2K,GACVuB,EAAQrF,EAAE+D,GAELhC,EAAcqD,EAAOC,KAI1BvB,IACAC,IAEAhB,EAAYqC,EAAOC,EAAOnD,EAI5B,MAAiB8B,GAAVF,GAA4BG,GAAVF,IACvBqB,EAAQjM,EAAE6K,GACVqB,EAAQrF,EAAEiE,GAELlC,EAAcqD,EAAOC,KAI1BrB,IACAC,IAEAlB,EAAYqC,EAAOC,EAAOnD,EAM5B,MAAiB8B,GAAVF,GAA4BG,GAAVF,GACvBqB,EAAQjM,EAAE2K,KACVuB,EAAQrF,EAAE+D,KACNhC,EAAcqD,EAAOC,GACvBtC,EAAYqC,EAAOC,EAAOnD,IAE1BY,EAAiBuB,EAAQgB,EAAOD,EAAMvE,IAAKqB,GAC3CyC,EAAiBN,EAAQe,GAK7B,MAAiBpB,GAAVF,GACLa,EAAiBN,EAAQlL,EAAE2K,KAO7B,KAJA2B,EAAUxB,EAAO,EACjByB,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAG5BoD,GAAVF,GACLjB,EAAiBuB,EAAQrE,EAAE+D,KAAW2B,EAAMxD,GAYhD,QAASsD,GAAuBnB,EAAQlL,EAAG6G,EAAGkC,GAC5C,GAQI7I,GACAiF,EAEAmH,EACAC,EACAN,EACAC,EAEAM,EACA1D,EAjBA6B,EAAS,EACTC,EAAS,EACTC,EAAO7K,EAAES,OAAS,EAClBqK,EAAOjE,EAAEpG,OAAS,EAClBgM,EAAazM,EAAE2K,GACf+B,EAAa7F,EAAE+D,GACf+B,EAAW3M,EAAE6K,GACb+B,EAAW/F,EAAEiE,GAGb+B,GAAO,EAKPC,EAAa,CAYjBC,GAAO,EAAG,CAIR,IAHAF,GAAO,EAGAJ,EAAW3F,MAAQ4F,EAAW5F,KAAK,CAIxC,GAHA8C,EAAY6C,EAAYC,EAAY3D,GACpC4B,IACAC,IACID,EAASE,GAAQD,EAASE,EAC5B,KAAMiC,EAERN,GAAazM,EAAE2K,GACf+B,EAAa7F,EAAE+D,GACfiC,GAAO,EAIT,KAAOF,EAAS7F,MAAQ8F,EAAS9F,KAAK,CAIpC,GAHA8C,EAAY+C,EAAUC,EAAU7D,GAChC8B,IACAC,IACIH,EAASE,GAAQD,EAASE,EAC5B,KAAMiC,EAERJ,GAAW3M,EAAE6K,GACb+B,EAAW/F,EAAEiE,GACb+B,GAAO,EAIT,KAAOJ,EAAW3F,MAAQ8F,EAAS9F,KAAK,CAOtC,GANA8C,EAAY6C,EAAYG,EAAU7D,GAClCuD,EAAUxB,EAAO,EACjByB,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAC7C6D,EAAeL,EAAQ0B,EAAUL,GACjC5B,IACAG,IACIH,EAASE,GAAQD,EAASE,EAC5B,KAAMiC,EAERN,GAAazM,EAAE2K,GACfiC,EAAW/F,EAAEiE,GACb+B,GAAO,CACP,SAASE,GAIX,KAAOJ,EAAS7F,MAAQ4F,EAAW5F,KAAK,CAKtC,GAJA8C,EAAY+C,EAAUD,EAAY3D,GAClCwC,EAAeL,EAAQwB,EAAYD,EAAW/E,KAC9CmD,IACAD,IACID,EAASE,GAAQD,EAASE,EAC5B,KAAMiC,EAERJ,GAAW3M,EAAE6K,GACb6B,EAAa7F,EAAE+D,GACfiC,GAAO,UAEDA,GAAkBhC,GAAVF,GAA4BG,GAAVF,EAEpC,IAAID,EAASE,EAIX,IAFAyB,EAAUxB,EAAO,EACjByB,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAC5BoD,GAAVF,GACLjB,EAAiBuB,EAAQrE,EAAE+D,KAAW2B,EAAMxD,OAEzC,IAAI6B,EAASE,EAElB,KAAiBD,GAAVF,GACLa,EAAiBN,EAAQlL,EAAE2K,UAExB,CAWL,GAAIqC,GAAUnC,EAAOF,EAAS,EAC1BsC,EAAUnC,EAAOF,EAAS,EAC1BsC,EAAU,GAAIjC,OAAMgC,EAGxB,KAAK/M,EAAI,EAAO+M,EAAJ/M,EAAaA,IACvBgN,EAAQhN,GAAK,EAGf,IAAIiN,IAAQ,EACRC,EAAe,CAInB,IAAyB,IAArBJ,EAAUC,EACZ,IAAK/M,EAAIyK,EAAaE,GAAL3K,EAAWA,IAAK,CAC/B,GAAI6K,IAAU,CAEd,KADAkB,EAAQjM,EAAEE,GACLiF,EAAIyF,EAAaE,GAAL3F,EAAWA,IAE1B,GADA+G,EAAQrF,EAAE1B,GACN8G,EAAMnF,MAAQoF,EAAMpF,IAAK,CAC3BoG,EAAQ/H,EAAIyF,GAAU1K,EAElB4M,EAAa3H,EACfgI,GAAQ,EAERL,EAAa3H,EAEfyE,EAAYqC,EAAOC,EAAOnD,GAC1BgC,GAAU,CACV,OAGAA,IACFS,EAAiBN,EAAQe,GACzBmB,SAGC,CACL,GAAIC,KAEJ,KAAKnN,EAAI0K,EAAaE,GAAL5K,EAAWA,IAC1B4I,EAAOjC,EAAE3G,GACTmN,EAASvE,EAAKhC,KAAO5G,CAGvB,KAAKA,EAAIyK,EAAaE,GAAL3K,EAAWA,IAC1B+L,EAAQjM,EAAEE,GACViF,EAAIkI,EAASpB,EAAMnF,KAET,SAAN3B,GACF+G,EAAQrF,EAAE1B,GACV+H,EAAQ/H,EAAIyF,GAAU1K,EAClB4M,EAAa3H,EACfgI,GAAQ,EAERL,EAAa3H,EAEfyE,EAAYqC,EAAOC,EAAOnD,KAE1ByC,EAAiBN,EAAQe,GACzBmB,KAKN,GAAID,EAAO,CACT,GAAIG,GAAMC,EAAKL,EAMf,KADA/H,EAAImI,EAAI7M,OAAS,EACZP,EAAI+M,EAAU,EAAG/M,GAAK,EAAGA,IACT,KAAfgN,EAAQhN,IACVsM,EAAMtM,EAAI0K,EACV9B,EAAOjC,EAAE2F,GACTF,EAAUE,EAAM,EAChBD,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAC7CiC,EAAiBuB,EAAQpC,EAAMyD,EAAMxD,IAE7B,EAAJ5D,GAASjF,GAAKoN,EAAInI,IACpBqH,EAAMtM,EAAI0K,EACV9B,EAAOjC,EAAE2F,GACTF,EAAUE,EAAM,EAChBD,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAC7C6D,EAAeL,EAAQpC,EAAMyD,IAE7BpH,QAID,IAAI6H,EAAUI,GAAgBH,EACnC,IAAK/M,EAAI+M,EAAU,EAAG/M,GAAK,EAAGA,IACT,KAAfgN,EAAQhN,KACVsM,EAAMtM,EAAI0K,EACV9B,EAAOjC,EAAE2F,GACTF,EAAUE,EAAM,EAChBD,EAAOD,EAAUzF,EAAEpG,OAASoG,EAAEyF,GAAS5E,IAAM,KAC7CiC,EAAiBuB,EAAQpC,EAAMyD,EAAMxD,KAmB/C,QAASwE,GAAKvN,GACZ,GAEIE,GAAGkJ,EACHjE,EACApF,EACAyN,EACAC,EANAC,EAAI1N,EAAE2N,MAAM,GACZC,GAAU,EAOd,KAAK1N,EAAI,EAAGkJ,EAAKpJ,EAAES,OAAY2I,EAAJlJ,EAAQA,IACjC,GAAa,KAATF,EAAEE,GAKN,GADAiF,EAAIyI,EAAOA,EAAOnN,OAAS,GACvBT,EAAEmF,GAAKnF,EAAEE,GACXwN,EAAExN,GAAKiF,EACPyI,EAAO1M,KAAKhB,OAFd,CASA,IAHAH,EAAI,EACJyN,EAAII,EAAOnN,OAAS,EAET+M,EAAJzN,GACL0N,GAAM1N,EAAIyN,GAAK,EAAK,EAChBxN,EAAE4N,EAAOH,IAAMzN,EAAEE,GACnBH,EAAI0N,EAAI,EAERD,EAAIC,CAIJzN,GAAEE,GAAKF,EAAE4N,EAAO7N,MACdA,EAAI,IACN2N,EAAExN,GAAK0N,EAAO7N,EAAI,IAEpB6N,EAAO7N,GAAKG,GAOhB,IAHAH,EAAI6N,EAAOnN,OACX+M,EAAII,EAAO7N,EAAI,GAERA,IAAM,GACX6N,EAAO7N,GAAKyN,EACZA,EAAIE,EAAEF,EAGR,OAAOI,GAoBT,QAASC,GAAU3C,EAAQ/J,EAAMsG,GAK/BrE,KAAKS,MAAQiK,EAMb1K,KAAK2K,IAAM,GAMX3K,KAAK4K,MAAkB,MAAV9C,EAAiB,EAAIA,EAAO8C,MAAQ,EAMjD5K,KAAK8H,OAASA,EAEd9H,KAAKjC,KAAOA,EACZiC,KAAKqE,SAAWA,EAMhBrE,KAAKsF,KAAO,KAMZtF,KAAK4E,QAAU,KAMf5E,KAAK6K,QAAU,KAMf7K,KAAK8K,YAAc,KAsPrB,QAAStM,GAAgB0G,EAAW4C,GAClC5C,EAAUY,SACVZ,EAAUvH,OACVmK,EAAOiD,YAAY7F,EAAUN,SAC7BM,EAAUyD,SACVzD,EAAU3H,SAz5CZ,GACI0B,IADYpC,EAAQ,eACdA,EAAQ,UAGd6H,EAAS,EAETG,EAAY,EAEZO,EAAc,EAEdG,EAAS,EAETP,EAAQ,EAqEZjB,GAAMiH,KAAOtG,EACbX,EAAMkH,QAAUpG,EAChBd,EAAMmH,UAAY9F,EAClBrB,EAAMoH,KAAO5F,EACbxB,EAAMqH,IAAMpG,CAygCZ,IAAI0F,GAAU,EACVzC,EAAa,EACboD,EAAQ,EACRC,EAAa,EACbC,EAA6Bb,EAAUzC,CA+D3CwC,GAAUe,MAAQd,EAClBD,EAAUgB,SAAWxD,EACrBwC,EAAUW,IAAMC,EAChBZ,EAAUiB,SAAWJ,EACrBb,EAAUkB,yBAA2BJ,EAKrCd,EAAUnI,UAAU0B,IAAM,MAS1ByG,EAAUnI,UAAUwD,OAAS,WAC3B9F,KAAK4E,QAAUnG,SAASmH,cAAc5F,KAAKgE,MAU7CyG,EAAUnI,UAAUsJ,MAAQ,SAAShH,GACnC5E,KAAKS,OAAS6K,EACdtL,KAAK4E,QAAUA,GAWjB6F,EAAUnI,UAAU3E,KAAO,aAE3B8M,EAAUnI,UAAUuE,WAAa,SAAS9I,GACpCiC,KAAKjC,OAASA,IAChBiC,KAAKjC,KAAOA,EACZiC,KAAK7B,eAITsM,EAAUnI,UAAUwE,eAAiB,SAASzC,GACxCrE,KAAKqE,WAAaA,IACpBrE,KAAKqE,SAAWA,EAChBrE,KAAK7B,eAYTsM,EAAUnI,UAAU/E,OAAS,YACtByC,KAAKS,MAAQ8K,IAA+BA,IAC3CvL,KAAK6L,eACP7L,KAAK8L,aAEP9L,KAAK2K,IAAM1L,EAAIC,UAAU6B,MACzBf,KAAKS,QAAUiK,EACf1K,KAAK+I,YAaT0B,EAAUnI,UAAUuJ,YAAc,WAAa,OAAO,GAStDpB,EAAUnI,UAAUwJ,WAAa,aAQjCrB,EAAUnI,UAAUyJ,WAAa,SAASC,GACvB,MAAbhM,KAAKsF,MACP0G,EAAQzH,KAAOvE,KACmB,KAA7BA,KAAKS,MAAQ6K,IAChBW,WAAWjM,KAAK4E,QAAS5E,MACzBA,KAAKS,QAAU6K,IAEfU,EAAQ1H,IAAMtE,KAAK4E,QACnBmB,EAAYiG,EAAShM,QAGvBwG,EAAYxG,KAAKsF,KAAM0G,EAAShM,MAElCA,KAAKsF,KAAO0G,GASdvB,EAAUnI,UAAUnE,WAAa,WAC/B,GAA+B,KAA1B6B,KAAKS,MAAQiK,GAAgB,CAChC,GAAIxL,GAAYD,EAAIC,SAEpBc,MAAKS,OAASiK,EACM,MAAhB1K,KAAK6K,UACP7K,KAAK6K,QAAU7K,KAAKzC,OAAO2O,KAAKlM,OAIhCd,EAAUb,YAAYC,MAAM0B,KAAK6K,QAAS7K,KAAK4K,OAGjD5K,KAAKmM,sBACLnM,KAAKoM,gBAaT3B,EAAUnI,UAAUiG,QAAU,WACX,MAAbvI,KAAKsF,MACPtF,KAAKsF,KAAKiD,UAEsB,KAA7BvI,KAAKS,MAAQwH,KAChBjI,KAAKS,OAASwH,EACdjI,KAAKqM,YAEPrM,KAAKmM,sBACLnM,KAAKsM,aACLtM,KAAKuM,YAaP9B,EAAUnI,UAAUqG,OAAS,WAC3B3I,KAAKS,OAASwH,EACdjI,KAAKwM,WACY,MAAbxM,KAAKsF,MACPkD,EAAYxI,KAAKsF,OAcrBmF,EAAUnI,UAAUsG,OAAS,WACV,MAAb5I,KAAKsF,MACPmD,EAAYzI,KAAKsF,MAEnBtF,KAAKS,QAAUwH,EACfjI,KAAKqM,YAQP5B,EAAUnI,UAAU8J,YAAc,aAQlC3B,EAAUnI,UAAUyG,QAAU,aAQ9B0B,EAAUnI,UAAUkK,SAAW,aAQ/B/B,EAAUnI,UAAU+J,SAAW,aAQ/B5B,EAAUnI,UAAUiK,SAAW,aAE/B9B,EAAUnI,UAAUgK,WAAa,aACjC7B,EAAUnI,UAAU6J,oBAAsB,aAU1CnN,EAAO7B,SACL4G,MAAOA,EACP0G,UAAWA,EACX3E,OAAQL,EACRgH,OAAQ1G,EACRxI,OAAQiJ,EACRmC,OAAQH,EACRI,OAAQH,EACR+D,SAAUtE,EACVmE,SAAU3D,EACVpM,EAAGkI,EACHkI,GAAI/H,EACJtI,EAAGuI,EACH+H,GAAI7H,EACJrI,EAAGsI,EACH6H,GAAI3H,EACJoF,EAAGnF,EACH2H,GAAIxH,EACJ7I,EAAG8I,EACH9G,gBAAiBA,KAGhBmB,QAAQ,EAAEmN,cAAc,IAAIC,GAAG,SAASlQ,EAAQmC,GACnD,YAOA,SAASgO,GAAe5C,GACtB,IAAKA,EAAG,MAAO,EAEf,IAAI6C,GAAMC,WAAW9C,GAAG+C,QAAQ,EAEhC,IAAI/C,EAAI,GAAI,CACV,GAAIgD,GAAUC,KAAKC,MAAMlD,EAAI,IACzBmD,GAASC,MAAQ,IAAIL,QAAQ,GAAGM,MAAM,KACtCC,EAAUH,EAAM,GAAGI,KAAK,IAAK,GAC7BC,EAAKL,EAAM,EACfN,GAAMG,EAAU,IAAMM,EAAU,IAAME,EAGxC,MAAOX,GAOT,QAASY,GAAMlI,EAAS5H,EAAMsG,GAC5B9F,EAAKkM,UAAUrN,KAAK4C,KAAM2F,EAAS5H,EAAMsG,GA1B3C,GAAI3G,GAAOb,EAAQ,QACf0B,EAAOb,EAAKa,KAEZuP,EAAUjR,EAAQ,aAkBlBkR,GAAoB,mBACpBC,GAAkB,iBAClBC,GAAkB,gBAKtBvQ,GAAK+B,SAASoO,EAAOtP,EAAKkM,WAE1BoD,EAAMvL,UAAU0B,IAAM,KAEtB6J,EAAMvL,UAAUwJ,WAAa,WAC3B,GAAIoC,GAAKlO,KAAKjC,KAAKmQ,GACfC,EAAiBD,EAAGE,oBAEpBC,EAAO9P,EAAKlC,EAAE,KAClBgS,GAAKpK,KAAO,SACZoK,EAAKhK,UAAY9F,EAAKjC,EAAE4R,EAAGG,MAE3B,IAAIC,GAAQJ,EAAGK,QAAQlR,OAEnBmR,EAASjQ,EAAKlC,EAAE,OACpBmS,GAAOvK,KAAO,QACduK,EAAOnK,UAAY9F,EAAKjC,EAAEgS,IAExBE,EAAOpK,QADLkK,GAAS,GACMP,EACRO,GAAS,GACDN,EAEAC,CAGnB,IAAIQ,GAAKlQ,EAAKlC,EAAE,KAChBoS,GAAGxK,KAAO,cACVwK,EAAGpK,UAAYmK,EAIf,KAAK,GAFDnK,IAAYgK,EAAMI,GAEb3R,EAAI,EAAO,EAAJA,EAAOA,IAAK,CAC1B,GAAI4R,GAAIP,EAAerR,GACnB6R,EAAUD,EAAEC,QACZnK,EAAOjG,EAAKjC,EAAE0Q,EAAe2B,IAC7BC,EAAUrQ,EAAK8L,EAAEyD,GAAUe,MAAOH,EAAEG,QAEpCC,EAAMvQ,EAAKlC,EAAE,KACjByS,GAAI7K,KAAO,OACX,IAAIG,KACJA,GAAQtG,KAAK,WAEXsG,EAAQtG,KADN6Q,GAAW,GACA,YACJA,GAAW,EACP,OAEA,SAEfG,EAAI1K,QAAUA,EACd0K,EAAIzK,UAAYG,EAAMoK,GACtBvK,EAASvG,KAAKgR,GAGhB,GAAIxJ,GAAO/G,EAAK/B,GAChB8I,GAAKjB,SAAWA,EAEhBrE,KAAK+L,WAAWzG,IAGlBtG,EAAO7B,QAAU0Q,IAEdkB,YAAY,EAAErR,KAAO,IAAIsR,GAAG,SAASnS,EAAQmC,GAChD,YAQA,SAASf,GAAK0H,EAAS5H,EAAMsG,GAC3B9F,EAAKkM,UAAUrN,KAAK4C,KAAM2F,EAAS5H,EAAMsG,GAP3C,GAAI3G,GAAOb,EAAQ,QACf0B,EAAOb,EAAKa,KACZsP,EAAQhR,EAAQ,WAEhBoS,GAAiB,QAAS,gBAAiB,cAK/CvR,GAAK+B,SAASxB,EAAMM,EAAKkM,WAEzBxM,EAAKqE,UAAU0B,IAAM,QAErB/F,EAAKqE,UAAUwJ,WAAa,WAI1B,IAAK,GAHDtO,GAAMwC,KAAKjC,KAEXmR,KACKpS,EAAI,EAAGA,EAAIU,EAAIH,OAAQP,IAAK,CACnC,GAAIoR,GAAK1Q,EAAIV,EACboS,GAAKpR,KAAKS,EAAKsO,GAAGqB,EAAGiB,GAAItB,GAAQK,GAAIA,KAGvC,GAAIkB,GAAQ7Q,EAAKlC,EAAE,QACnB+S,GAAM/K,SAAW6K,CACjB,IAAI5J,GAAO/G,EAAK/B,GAChB8I,GAAKlB,QAAU6K,EACf3J,EAAKjB,UAAY+K,GAEjBpP,KAAK+L,WAAWzG,IAGlBtG,EAAO7B,QAAUc,IAEdoR,UAAU,EAAE3R,KAAO,IAAI4R,GAAG,SAASzS,EAAQmC,GAC9C,YAOA,SAAS8O,GAAQnI,EAAS5H,EAAMsG,GAC9B9F,EAAKkM,UAAUrN,KAAK4C,KAAM2F,EAAS5H,EAAMsG,GAN3C,GAAI3G,GAAOb,EAAQ,QACf0B,EAAOb,EAAKa,KAEZ0Q,GAAiB,UAAW,OAKhCvR,GAAK+B,SAASqO,EAASvP,EAAKkM,WAE5BqD,EAAQxL,UAAUwJ,WAAa,WAC7B,GAAIrH,GAAUlG,EAAKlC,EAAE,MACrBoI,GAAQR,KAAO,kBACfQ,EAAQJ,UAAY9F,EAAKjC,EAAE0D,KAAKjC,KAAK8Q,OAErC,IAAIU,GAAQhR,EAAKlC,EAAE,MACnBkT,GAAMtL,KAAO,OAEb,IAAIqB,GAAO/G,EAAK/B,GAChB8I,GAAKlB,QAAU6K,EACf3J,EAAKjB,UAAYI,EAAS8K,GAE1BvP,KAAK+L,WAAWzG,IAGlBtG,EAAO7B,QAAU2Q,IAEdpQ,KAAO,IAAI8R,IAAI,SAAS3S,EAAQmC,GACnC,YAEA,SAASyQ,GAAMd,EAASe,EAASb,GAC/B7O,KAAK2O,QAAUA,EACf3O,KAAK0P,QAAUA,EACf1P,KAAK6O,MAAQA,EAoBf,QAAS7Q,GAASqQ,GAChBrO,KAAKmP,GAAKQ,IACV3P,KAAKqO,KAAOA,EACZrO,KAAKuO,QAAU,KAEfvO,KAAKzC,SAtBPkS,EAAMG,KAAO,WACX,GAAIjB,GAA0B,GAAhBtB,KAAKwC,SACfH,EAAUrC,KAAKwC,SAAW,GAC1BhB,EAAQ,4BAUZ,OARIxB,MAAKwC,SAAW,KAClBhB,EAAQ,yBAGNxB,KAAKwC,SAAW,KAClBhB,EAAQ,UAGH,GAAIY,GAAMd,EAASe,EAASb,GAGrC,IAAIc,GAAU,CASd3R,GAASsE,UAAU/E,OAAS,WAI1B,IAAK,GAHDgR,MAEA/R,EAAI6Q,KAAKC,MAAuB,GAAhBD,KAAKwC,SAAiB,GACjC9N,EAAI,EAAOvF,EAAJuF,EAAOA,IACrBwM,EAAQzQ,KAAK2R,EAAMG,OAGrB5P,MAAKuO,QAAUA,GAGjBvQ,EAASsE,UAAU8L,kBAAoB,WACrC,GAAI0B,GAAK9P,KAAKuO,QAAQhE,OAKtB,KAJAuF,EAAGC,KAAK,SAASnT,EAAG6G,GAClB,MAAO7G,GAAE+R,QAAUlL,EAAEkL,UAEvBmB,EAAKA,EAAGvF,MAAM,EAAG,GACVuF,EAAGzS,OAAS,GACjByS,EAAGhS,KAAK,GAAI2R,GAAM,GAAK,EAAO,IAEhC,OAAOK,IAGT9Q,EAAO7B,SACLsS,MAAOA,EACPzR,SAAUA,aAGD","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar I = 0;\nvar N = 100;\n\nvar kivi = require('kivi');\nvar Scheduler = require('kivi/lib/scheduler');\n\nvar data = require('./data');\nvar Main = require('./component/main');\n\nfunction update(dbs) {\n  for (var i = 0; i < dbs.length; i++) {\n    dbs[i].update();\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  main();\n});\n\nfunction main() {\n  kivi.init(new Scheduler());\n\n  var dbs = [];\n  for (var i = 0; i < N; i++) {\n    dbs.push(new data.Database('cluster' + i));\n    dbs.push(new data.Database('cluster' + i + 'slave'));\n  }\n\n  var main = new Main(null, dbs, null);\n\n  setInterval(function() {\n    update(dbs);\n    main.invalidate();\n  }, I);\n\n  kivi.nextFrame().write(function() {\n    kivi.vdom.injectComponent(main, document.body);\n  });\n}\n\n},{\"./component/main\":8,\"./data\":10,\"kivi\":3,\"kivi/lib/scheduler\":4}],2:[function(require,module,exports){\n'use strict';\n\nvar ENV = {\n  scheduler: null\n};\n\nmodule.exports = ENV;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar ENV = require('./env');\nvar vdom = require('./vdom');\nvar utils = require('./utils');\n\nfunction init(scheduler) {\n  ENV.scheduler = scheduler;\n}\n\nfunction nextFrame() {\n  return ENV.scheduler.nextFrame();\n}\n\nfunction scheduleMicrotask(cb) {\n  ENV.scheduler.scheduleMicrotask(cb);\n}\n\nfunction action(cb) {\n  ENV.scheduler.action(cb);\n}\n\nmodule.exports = {\n  ENV: ENV,\n  vdom: vdom,\n  init: init,\n  nextFrame: nextFrame,\n  scheduleMicrotask: scheduleMicrotask,\n  action: action,\n  toFastObj: utils.toFastObj,\n  inherits: utils.inherits,\n  shallowEq: utils.shallowEq\n};\n\n},{\"./env\":2,\"./utils\":5,\"./vdom\":6}],4:[function(require,module,exports){\n'use strict';\n\nfunction _MutationObserverScheduler(cb) {\n  this._observer = new window.MutationObserver(cb);\n  this._node = document.createTextNode('');\n  this._observer.observe(this._node, {characterData: true});\n}\n\n_MutationObserverScheduler.prototype.requestNextTick = function() {\n  this._toggle ^= 1;\n  this._node.data = this._toggle;\n};\n\nvar F_WRITE_PRIO = 4;\nvar F_WRITE = 8;\nvar F_READ = 16;\nvar F_AFTER = 32;\nvar F_WRITE_ANY = F_WRITE | F_WRITE_PRIO;\n\nfunction Frame() {\n  this.flags = 0|0;\n  this.writeTaskGroups = [];\n  this.writeTasks = null;\n  this.readTasks = null;\n  this.afterTasks = null;\n}\n\nFrame.prototype.write = function(cb, priority) {\n  var group;\n\n  if (priority === void 0) priority = -1;\n\n  if (priority === -1) {\n    this.flags |= F_WRITE;\n    if (this.writeTasks == null) {\n      this.writeTasks = [];\n    }\n    this.writeTasks.push(cb);\n  } else {\n    this.flags |= F_WRITE_PRIO;\n    while (priority >= this.writeTaskGroups.length) {\n      this.writeTaskGroups.push(null);\n    }\n\n    group = this.writeTaskGroups[priority];\n    if (group == null) {\n      group = this.writeTaskGroups[priority] = [];\n    }\n\n    group.push(cb);\n  }\n};\n\nFrame.prototype.read = function(cb) {\n  this.flags |= F_READ;\n  if (this.readTasks == null) {\n    this.readTasks = [];\n  }\n  this.readTasks.push(cb);\n};\n\nFrame.prototype.after = function(cb) {\n  this.flags |= F_AFTER;\n  if (this.afterTasks == null) {\n    this.afterTasks = [];\n  }\n  this.afterTasks.push(cb);\n};\n\nvar S_RUNNING = 1;\nvar S_MICROTASK_PENDING = 2;\nvar S_FRAMETASK_PENDING = 4;\nvar S_MICROTASK_RUNNING = 8;\nvar S_FRAMETASK_RUNNING = 16;\n\nfunction Scheduler() {\n  this.flags = 0|0;\n  this.dataClock = 0;\n  this.clock = -1;\n\n  this._actions = null;\n\n  this._microtasks = null;\n  this._currentFrame = new Frame();\n  this._nextFrame = new Frame();\n\n  var self = this;\n\n  this._microtaskScheduler = new _MutationObserverScheduler(function() {\n    self.flags &= ~S_MICROTASK_PENDING;\n    self.flags |= S_RUNNING;\n    self.clock++;\n\n    var tasks = self._microtasks;\n    if (tasks != null) {\n      self._microtasks = null;\n\n      for (var i = 0; i < tasks.length; i++) {\n        tasks[i]();\n      }\n    }\n\n    self.dataClock++;\n    self.performActions();\n    self.flags &= ~S_RUNNING;\n  });\n\n  this._handleAnimationFrame = function() {\n    var frame;\n    var groups;\n    var group;\n    var task;\n    var i, j;\n\n    self.flags &= ~S_FRAMETASK_PENDING;\n    self.flags |= S_RUNNING;\n    self.clock++;\n\n    frame = self._nextFrame;\n    self._nextFrame = self._currentFrame;\n    self._currentFrame = frame;\n\n    do {\n      while ((frame.flags & F_WRITE_ANY) !== 0) {\n        if ((frame.flags & F_WRITE_PRIO) !== 0) {\n          frame.flags &= ~F_WRITE_PRIO;\n          groups = frame.writeTaskGroups;\n\n          for (i = 0; i < groups.length; i++) {\n            group = groups[i];\n            if (group != null) {\n              groups[i] = null;\n              for (j = 0; j < group.length; j++) {\n                task = group[j];\n                task();\n              }\n            }\n          }\n        }\n\n        if ((frame.flags & F_WRITE) !== 0) {\n          frame.flags &= ~F_WRITE;\n          group = frame.writeTasks;\n          for (i = 0; i < group.length; i++) {\n            task = group[i];\n            task();\n          }\n        }\n      }\n\n      while ((frame.flags & F_READ) !== 0) {\n        frame.flags &= ~F_READ;\n        group = frame.readTasks;\n        frame.readTasks = null;\n\n        for (i = 0; i < group.length; i++) {\n          task = group[i];\n          task();\n        }\n      }\n    } while ((frame.flags & F_WRITE_ANY) !== 0);\n\n    while ((frame.flags & F_AFTER) !== 0) {\n      frame.flags &= ~F_AFTER;\n\n      group = frame.afterTasks;\n      for (i = 0; i < group.length; i++) {\n        task = group[i];\n        task();\n      }\n    }\n\n    self.dataClock++;\n    self.performActions();\n    self.flags &= ~S_RUNNING;\n  };\n}\n\nScheduler.RUNNING = S_RUNNING;\nScheduler.FRAMETASK_RUNNING = S_FRAMETASK_RUNNING;\nScheduler.MICROTASK_RUNNING = S_MICROTASK_RUNNING;\n\nScheduler.prototype.currentFrame = function() {\n  return this._currentFrame;\n};\n\nScheduler.prototype.nextFrame = function() {\n  if ((this.flags & S_FRAMETASK_PENDING) === 0) {\n    this.flags |= S_FRAMETASK_PENDING;\n    window.requestAnimationFrame(this._handleAnimationFrame);\n  }\n  return this._nextFrame;\n};\n\nScheduler.prototype.scheduleMicrotask = function(cb) {\n  if ((this.flags & S_MICROTASK_PENDING) === 0) {\n    this.flags |= S_MICROTASK_PENDING;\n    this._microtaskScheduler.requestNextTick();\n  }\n\n  if (this._microtasks == null) {\n    this._microtasks = [];\n  }\n\n  this._microtasks.push(cb);\n};\n\nScheduler.prototype.action = function(cb) {\n  if ((this.flags & S_MICROTASK_PENDING) === 0) {\n    this.flags |= S_MICROTASK_PENDING;\n    this._microtaskScheduler.requestNextTick();\n  }\n\n  if (this._actions == null) {\n    this._actions = [];\n  }\n\n  this._actions.push(cb);\n};\n\nScheduler.prototype.performActions = function() {\n  while (this._actions != null) {\n    var actions = this._actions;\n    this._actions = null;\n    for (var i = 0; i < actions.length; i++) {\n      actions[i]();\n    }\n  }\n};\n\nmodule.exports = Scheduler;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nfunction toFastObj(o) {\n  /* jshint -W027 */\n  function f() {}\n  f.prototype = o;\n  return o;\n  eval(obj);\n}\n\nfunction inherits(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {};\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  childCtor.prototype.constructor = childCtor;\n}\n\nfunction shallowEq(a, b) {\n  var i;\n  var key;\n  var keys;\n\n  keys = Object.keys(a);\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    if (!b.hasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  keys = Object.keys(b);\n  for (i = 0; i < keys.length; i++) {\n    if (!a.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = {\n  toFastObj: toFastObj,\n  inherits: inherits,\n  shallowEq: shallowEq\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar Scheduler = require('./scheduler');\nvar ENV = require('./env');\n\n/** Flag indicating that [VNode] is [Text]. */\nvar V_TEXT = 1;\n/** Flag indicating that [VNode] is [Element]. */\nvar V_ELEMENT = 2;\n/** Flag indicating that [VNode] is [Component]. */\nvar V_COMPONENT = 4;\n/** Flag indicating that [VNode] is root element of the [Component]. */\nvar V_ROOT = 8;\n/** Flag indicating that [VNode] represents node that is in svg namespace. */\nvar V_SVG = 16;\n\n/**\n * Virtual DOM Node.\n *\n * @param flags Flags.\n * @param key Key that should be unique among its siblings. If the key is\n *   `null`, it means that the key is implicit. When [key] is implicit, all\n *   siblings should also have implicit keys, otherwise it will result in\n *   undefined behaviour in \"production\" mode, or runtime error in\n *   \"development\" mode.\n * @param tag Tag should contain tag name if [VNode] represents an element, or\n *   reference to the [componentConstructor] if it represents a\n *   [Component].\n * @param data Data that should be passed to [Component]s. Data is transferred\n *   to the [Component] using `set data(P data)` setter. When [VNode]\n *   represents an element, [data] is used as a cache for className string\n *   that was built from [type] and [classes] properties.\n * @constructor\n */\nfunction VNode(flags, key, tag, data) {\n  this.flags = flags;\n  this.key = key;\n  this.tag = tag;\n  this.data = data;\n\n  /**\n   * Immutable class name\n   * @type {string}\n   */\n  this.type = null;\n  /**\n   * Attributes\n   * @type {Object<string,string>}\n   */\n  this.attrs = null;\n  /**\n   * Style\n   * @type {Object<string,string>}\n   */\n  this.style = null;\n  /**\n   * Classes\n   * @type {Array<string>}\n   */\n  this.classes = null;\n  /**\n   * List of children nodes. When [VNode] represents a [Component], children\n   * nodes are transferred to the [Component] with\n   * `Component.updateChildren(c)` method.\n   * @type {Array<VNode>}\n   */\n  this.children = null;\n  /**\n   * Reference to the [Node]. It will be available after [VNode] is\n   * [vNodeCreate]d or [vNodeUpdate]d. Each time [VNode] is updated, reference to the\n   * [Node] is passed from the previous node to the new one.\n   * @type {Node}\n   */\n  this.ref = null;\n  /**\n   * Reference to the [Component]. It will be available after [VNode] is\n   * [vNodeCreate]d or [vNodeUpdate]d. Each time [VNode] is updated, reference to the\n   * [Component] is passed from the previous node to the new one.\n   * @type {Component}\n   */\n  this.cref = null;\n}\n\nVNode.TEXT = V_TEXT;\nVNode.ELEMENT = V_ELEMENT;\nVNode.COMPONENT = V_COMPONENT;\nVNode.ROOT = V_ROOT;\nVNode.SVG = V_SVG;\n\nfunction text(content) {\n  return new VNode(V_TEXT, null, null, content);\n}\n\nfunction $text(key, content) {\n  return new VNode(V_TEXT, key, null, content);\n}\n\nfunction element(tag) {\n  return new VNode(V_ELEMENT, null, tag, null);\n}\n\nfunction $element(key, tag) {\n  return new VNode(V_ELEMENT, key, tag, null);\n}\n\nfunction svg(tag) {\n  return new VNode(V_ELEMENT | V_SVG, null, tag, null);\n}\n\nfunction $svg(key, tag) {\n  return new VNode(V_ELEMENT | V_SVG, key, tag, null);\n}\n\nfunction component(descriptor, data) {\n  if (data === void 0) data = null;\n  return new VNode(V_COMPONENT, null, descriptor, data);\n}\n\nfunction $component(key, descriptor, data) {\n  if (data === void 0) data = null;\n  return new VNode(V_COMPONENT, key, descriptor, data);\n}\n\nfunction root() {\n  return new VNode(V_ROOT, null, null, null);\n}\n\n/**\n * Checks if two VNodes have the same type and they can be updated.\n *\n * @param {VNode} a\n * @param {VNode} b\n * @return {boolean}\n */\nfunction vNodeSameType(a, b) {\n  return (a.flags === b.flags && a.tag === b.tag);\n}\n\n/**\n * Create root level element of the [VNode] object, or [Component] for\n * component nodes.\n *\n * @param {VNode} node\n * @param {Component} context\n */\nfunction vNodeCreate(node, context) {\n  var flags = node.flags;\n\n  if ((flags & V_TEXT) !== 0) {\n    node.ref = document.createTextNode(node.data);\n  } else if ((flags & V_ELEMENT) !== 0) {\n    if ((flags & V_SVG) === 0) {\n      node.ref = document.createElement(node.tag);\n    } else {\n      node.ref = document.createElementNS('http://www.w3.org/2000/svg', node.tag);\n    }\n  } else if ((flags & V_COMPONENT) !== 0) {\n    var component = new node.tag(context, node.data, node.children);\n    component.create();\n    component.init();\n    node.ref = component.element;\n    node.cref = component;\n  }\n}\n\n/**\n * Render internal representation of the VNode.\n *\n * @param {VNode} node\n * @param {Component} context\n */\nfunction vNodeRender(node, context) {\n  var i, il;\n  var key;\n  var keys;\n  var flags = node.flags;\n  var ref;\n  var style;\n  var className;\n  var classList;\n\n  if ((flags & (V_ELEMENT | V_COMPONENT | V_ROOT)) !== 0) {\n    ref = node.ref;\n    if (node.attrs != null) {\n      keys = Object.keys(node.attrs);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        ref.setAttribute(key, node.attrs[key]);\n      }\n    }\n\n    if (node.style != null) {\n      style = ref.style;\n      keys = Object.keys(node.style);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        style.setProperty(key, node.style[key]);\n      }\n    }\n\n    if ((flags & (V_ELEMENT | V_COMPONENT)) !== 0) {\n      className = null;\n      if (node.type != null) {\n        className = node.type;\n      }\n      if (node.classes != null) {\n        var classes = node.classes.join(' ');\n        className = (className == null) ? classes : className + ' ' + classes;\n      }\n      if (className != null) {\n        node.data = className;\n        ref.className = className;\n      }\n    } else {\n      classList = null;\n      if (node.type != null) {\n        classList = ref.classList;\n        classList.add(node.type);\n      }\n\n      if (node.classes != null) {\n        if (classList == null) {\n          classList = ref.classList;\n        }\n\n        for (i = 0, il = node.classes.length; i < il; i++) {\n          classList.add(node.classes[i]);\n        }\n      }\n    }\n\n    if ((flags & V_COMPONENT) !== 0) {\n      node.cref.update();\n    } else if (node.children != null) {\n      for (i = 0, il = node.children.length; i < il; i++) {\n        vNodeInsertChild(node, node.children[i], null, context);\n      }\n    }\n  }\n}\n\n/**\n * Update VNode. When VNode a is updated with VNode b, VNode a should\n * be considered as destroyed, and any access to it is an undefined\n * behaviour.\n *\n * @param {!VNode} a Old VNode\n * @param {!VNode} b New VNode\n * @param {Context} context\n */\nfunction vNodeUpdate(a, b, context) {\n  var ref = a.ref;\n  var flags = a.flags;\n  var classes;\n  var className;\n  var component;\n\n  b.ref = ref;\n\n  if ((flags & V_TEXT) !== 0) {\n    if (a.data != b.data) {\n      a.ref.nodeValue = b.data;\n    }\n  } else if ((flags & (V_ELEMENT | V_COMPONENT | V_ROOT)) !== 0) {\n    if (a.attrs !== b.attrs) {\n      updateAttrs(a.attrs, b.attrs, ref);\n    }\n    if (a.style !== b.style) {\n      updateStyle(a.style, b.style, ref.style);\n    }\n\n    if ((flags & V_ELEMENT) !== 0) {\n      if (a.classes !== b.classes) {\n        if (b.data == null) {\n          className = b.type;\n          if (b.classes != null) {\n            classes = b.classes.join(' ');\n            className = (className == null) ? classes : className + ' ' + classes;\n          }\n          b.data = className;\n        }\n        if (a.data !== b.data) {\n          if (b.data == null) {\n            ref.className = '';\n          } else {\n            ref.className = className;\n          }\n        }\n      } else {\n        b.data = a.data;\n      }\n    } else if (a.classes !== b.classes) {\n      updateClasses(a.classes, b.classes, ref.classList);\n    }\n\n    if ((flags & V_COMPONENT) !== 0) {\n      component = b.cref = a.cref;\n      component.updateData(b.data);\n      component.updateChildren(b.children);\n      component.update();\n    } else {\n      updateChildren(a, a.children, b.children, context);\n    }\n  }\n}\n\n/**\n * Update HTMLElement attributes.\n *\n * @param a Old attributes.\n * @param b New attributes.\n * @param node\n */\nfunction updateAttrs(a, b, node) {\n  var i, il;\n  var key;\n  var keys;\n  var aValue;\n  var bValue;\n\n  if (a != null) {\n    if (b == null) {\n      // b is empty, remove all attributes from a.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        node.removeAttribute(keys[i]);\n      }\n    } else {\n      // Remove and vNodeUpdate attributes.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (b.hasOwnProperty(key)) {\n          aValue = a[key];\n          bValue = b[key];\n          if (aValue !== bValue) {\n            node.setAttribute(key, bValue);\n          }\n        } else {\n          node.removeAttribute(key);\n        }\n      }\n\n      // Insert new attributes.\n      keys = Object.keys(b);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (!a.hasOwnProperty(key)) {\n          node.setAttribute(key, b[key]);\n        }\n      }\n    }\n  } else if (b != null) {\n    // a is empty, insert all attributes from b.\n    keys = Object.keys(b);\n    for (i = 0, il = keys.length; i < il; i++) {\n      key = keys[i];\n      node.setAttribute(key, b[key]);\n    }\n  }\n}\n\n/**\n * Update HTMLElement styles.\n *\n * @param {Object.<string,string>} a Old style.\n * @param {Object.<string,string>} b New style.\n * @param {CSSStyleDeclaration} style\n */\nfunction updateStyle(a, b, style) {\n  var i, il;\n  var key;\n  var keys;\n\n  if (a != null) {\n    if (b == null) {\n      // b is empty, remove all styles from a.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        style.removeProperty(keys[i]);\n      }\n    } else {\n      // Remove and vNodeUpdate styles.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (b.hasOwnProperty(key)) {\n          style.setProperty(key, b[key], '');\n        } else {\n          style.removeProperty(key);\n        }\n      }\n\n      // Insert new styles.\n      keys = Object.keys(b);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (!a.hasOwnProperty(key)) {\n          style.setProperty(key, b[key], '');\n        }\n      }\n    }\n  } else if (b != null) {\n    // a is empty, insert all styles from b.\n    keys = Object.keys(b);\n    for (i = 0, il = keys.length; i < il; i++) {\n      key = keys[i];\n      style.setProperty(key, b[key], '');\n    }\n  }\n}\n\n/**\n * Update HTMLElement classes.\n *\n * @param {Array.<string>} a Old classes.\n * @param {Array.<string>} b New classes.\n * @param {DOMTokenList} classList\n */\nfunction updateClasses(a, b, classList) {\n  var i;\n  var aCls, bCls;\n  var unchangedPosition;\n\n  if (a != null && a.length !== 0) {\n    if (b == null || b.length === 0) {\n      // b is empty, remove all classes from a.\n      for (i = 0; i < a.length; i++) {\n        classList.remove(a[i]);\n      }\n    } else {\n      if (a.length === 1 && b.length === 1) {\n        // Fast path when a and b have only one class.\n        aCls = a[0];\n        bCls = b[0];\n\n        if (aCls !== bCls) {\n          classList.remove(aCls);\n          classList.add(bCls);\n        }\n      } else if (a.length === 1) {\n        // Fast path when a have 1 class.\n        aCls = a[0];\n        unchangedPosition = -1;\n        for (i = 0; i < b.length; i++) {\n          bCls = b[i];\n          if (aCls === bCls) {\n            unchangedPosition = i;\n            break;\n          } else {\n            classList.add(bCls);\n          }\n        }\n        if (unchangedPosition !== -1) {\n          for (i = unchangedPosition + 1; i < b.length; i++) {\n            classList.add(b[i]);\n          }\n        } else {\n          classList.remove(aCls);\n        }\n      } else if (b.length === 1) {\n        // Fast path when b have 1 class.\n        bCls = b[0];\n        unchangedPosition = -1;\n        for (i = 0; i < a.length; i++) {\n          aCls = a[i];\n          if (aCls === bCls) {\n            unchangedPosition = i;\n            break;\n          } else {\n            classList.remove(aCls);\n          }\n        }\n        if (unchangedPosition !== -1) {\n          for (i = unchangedPosition + 1; i < a.length; i++) {\n            classList.remove(a[i]);\n          }\n        } else {\n          classList.add(bCls);\n        }\n      } else {\n        // a and b have more than 1 class.\n        var aStart = 0;\n        var bStart = 0;\n        var aEnd = a.length - 1;\n        var bEnd = b.length - 1;\n        var removed = false;\n        var j;\n\n        while (aStart <= aEnd && bStart <= bEnd) {\n          if (a[aStart] !== b[bStart]) {\n            break;\n          }\n\n          aStart++;\n          bStart++;\n        }\n\n        while (aStart <= aEnd && bStart <= bEnd) {\n          if (a[aEnd] !== b[bEnd]) {\n            break;\n          }\n\n          aEnd--;\n          bEnd--;\n        }\n\n        var visited = new Array(bEnd - bStart + 1);\n\n        for (i = aStart; i <= aEnd; i++) {\n          aCls = a[i];\n          removed = true;\n\n          for (j = bStart; j <= bEnd; j++) {\n            bCls = b[j];\n\n            if (aCls == bCls) {\n              removed = false;\n              visited[j - bStart] = true;\n              break;\n            }\n          }\n\n          if (removed) {\n            classList.remove(aCls);\n          }\n        }\n\n        for (i = bStart; i <= bEnd; i++) {\n          if (!visited[i - bStart]) {\n            classList.add(b[i]);\n          }\n        }\n      }\n    }\n  } else if (b != null && b.length > 0) {\n    // a is empty, insert all classes from b.\n    for (i = 0; i < b.length; i++) {\n      classList.add(b[i]);\n    }\n  }\n}\n\n/**\n * Insert VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to insert.\n * @param {Node} nextRef Reference to the next html element.\n * @param {Component} context Current context.\n */\nfunction vNodeInsertChild(parent, node, nextRef, context) {\n  vNodeCreate(node, context);\n  parent.ref.insertBefore(node.ref, nextRef);\n  if ((context.flags & C_ATTACHED) !== 0) {\n    vNodeAttached(node);\n  }\n  vNodeRender(node, context);\n}\n\n/**\n * Move VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to move.\n * @param {Node} nextRef Reference to the next html element.\n */\nfunction vNodeMoveChild(parent, node, nextRef) {\n  parent.ref.insertBefore(node.ref, nextRef);\n}\n\n/**\n * Remove VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to remove.\n */\nfunction vNodeRemoveChild(parent, node) {\n  parent.ref.removeChild(node.ref);\n  vNodeDispose(node);\n}\n\nfunction vNodeDispose(node) {\n  if ((node.flags & V_COMPONENT) !== 0) {\n    node.cref.dispose();\n  } else if (node.children != null) {\n    for (var i = 0; i < node.children.length; i++) {\n      vNodeDispose(node.children[i]);\n    }\n  }\n}\n\nfunction vNodeAttach(node) {\n  vNodeAttached(node);\n  if (((node.flags & V_COMPONENT) === 0) && (node.children != null)) {\n    for (var i = 0; i < node.children.length; i++) {\n      vNodeAttach(node.children[i]);\n    }\n  }\n}\n\nfunction vNodeDetach(node) {\n  if (((node.flags & V_COMPONENT) === 0) && (node.children != null)) {\n    for (var i = 0; i < node.children.length; i++) {\n      vNodeAttach(node.children[i]);\n    }\n  }\n  vNodeDetached(node);\n}\n\nfunction vNodeAttached(node) {\n  if ((node.flags & V_COMPONENT) !== 0) {\n    node.cref.attach();\n  }\n}\n\nfunction vNodeDetached(node) {\n  if ((node.flags & V_COMPONENT) !== 0) {\n    node.cref.detach();\n  }\n}\n\n/**\n * Update children [a] and [b] in the [parent].\n *\n * If one of the children has [:null:] key, it will run vNodeUpdate\n * algorithm for children with implicit keys, otherwise it will run\n * vNodeUpdate algorithm for children with explicit keys.\n *\n * Mixing children with explicit and implicit keys in one children\n * list will result in undefined behaviour. In development mode it\n * will be checked for this conditions and if it is detected that\n * there are children with implicit and explicit keys, it will result\n * in runtime error.\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateChildren(parent, a, b, context) {\n  var aNode;\n  var bNode;\n  var i = 0;\n  var updated = false;\n\n  if (a != null && a.length !== 0) {\n    if (b == null || b.length === 0) {\n      // b is empty, remove all children from a.\n      while(i < a.length) {\n        vNodeRemoveChild(parent, a[i++]);\n      }\n    } else {\n      if (a.length === 1 && b.length === 1) {\n        // Fast path when a and b have only one child.\n        aNode = a[0];\n        bNode = b[0];\n\n        // Implicit key with same type or explicit key with same key.\n        if ((aNode.key == null && vNodeSameType(aNode, bNode)) ||\n            (aNode.key != null && aNode.key === bNode.key)) {\n          vNodeUpdate(aNode, bNode, context);\n        } else {\n          vNodeRemoveChild(parent, aNode);\n          vNodeInsertChild(parent, bNode, null, context);\n        }\n      } else if (a.length === 1) {\n        // Fast path when a have 1 child.\n        aNode = a[0];\n        if (aNode.key == null) {\n          while (i < b.length) {\n            bNode = b[i++];\n            if (vNodeSameType(aNode, bNode)) {\n              vNodeUpdate(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeInsertChild(parent, bNode, aNode.ref, context);\n          }\n        } else {\n          while (i < b.length) {\n            bNode = b[i++];\n            if (aNode.key === bNode.key) {\n              vNodeUpdate(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeInsertChild(parent, bNode, aNode.ref, context);\n          }\n        }\n        if (updated) {\n          while (i < b.length) {\n            vNodeInsertChild(parent, b[i++], null, context);\n          }\n        } else {\n          vNodeRemoveChild(parent, aNode);\n        }\n      } else if (b.length === 1) {\n        // Fast path when b have 1 child.\n        bNode = b[0];\n        if (bNode.key == null) {\n          while (i < a.length) {\n            aNode = a[i++];\n            if (vNodeSameType(aNode, bNode)) {\n              vNodeUpdate(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeRemoveChild(parent, aNode);\n          }\n        } else {\n          while (i < a.length) {\n            aNode = a[i++];\n            if (aNode.key === bNode.key) {\n              vNodeUpdate(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeRemoveChild(parent, aNode);\n          }\n        }\n\n        if (updated) {\n          while (i < a.length) {\n            vNodeRemoveChild(parent, a[i++]);\n          }\n        } else {\n          vNodeInsertChild(parent, bNode, null, context);\n        }\n      } else {\n        // a and b have more than 1 child.\n        if (a[0].key == null) {\n          updateImplicitChildren(parent, a, b, context);\n        } else {\n          updateExplicitChildren(parent, a, b, context);\n        }\n      }\n    }\n  } else if (b != null && b.length > 0) {\n    // a is empty, insert all children from b\n    for (i = 0; i < b.length; i++) {\n      vNodeInsertChild(parent, b[i], null, context);\n    }\n  }\n}\n\n/**\n * Update children with implicit keys [a] and [b] in the [parent].\n *\n * Any heuristics that is used in this algorithm is an undefined\n * behaviour, and external dependencies should not relay on the\n * knowledge about this algorithm, because it can be changed in any\n * time.\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateImplicitChildren(parent, a, b, context) {\n  var aStart = 0;\n  var bStart = 0;\n  var aEnd = a.length - 1;\n  var bEnd = b.length - 1;\n  var aNode;\n  var bNode;\n  var nextPos;\n  var next;\n\n  // Update nodes with the same type at the beginning.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aStart];\n    bNode = b[bStart];\n\n    if (!vNodeSameType(aNode, bNode)) {\n      break;\n    }\n\n    aStart++;\n    bStart++;\n\n    vNodeUpdate(aNode, bNode, context);\n  }\n\n  // Update nodes with the same type at the end.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aEnd];\n    bNode = b[bEnd];\n\n    if (!vNodeSameType(aNode, bNode)) {\n      break;\n    }\n\n    aEnd--;\n    bEnd--;\n\n    vNodeUpdate(aNode, bNode, context);\n  }\n\n  // Iterate through the remaining nodes and if they have the same\n  // type, then vNodeUpdate, otherwise just remove the old node and insert\n  // the new one.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aStart++];\n    bNode = b[bStart++];\n    if (vNodeSameType(aNode, bNode)) {\n      vNodeUpdate(aNode, bNode, context);\n    } else {\n      vNodeInsertChild(parent, bNode, aNode.ref, context);\n      vNodeRemoveChild(parent, aNode);\n    }\n  }\n\n  // All nodes from a are updated, insert the rest from b.\n  while (aStart <= aEnd) {\n    vNodeRemoveChild(parent, a[aStart++]);\n  }\n\n  nextPos = bEnd + 1;\n  next = nextPos < b.length ? b[nextPos].ref : null;\n\n  // All nodes from b are updated, remove the rest from a.\n  while (bStart <= bEnd) {\n    vNodeInsertChild(parent, b[bStart++], next, context);\n  }\n}\n\n/**\n * Update children with explicit keys [a] and [b] in the [parent].\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateExplicitChildren(parent, a, b, context) {\n  var aStart = 0;\n  var bStart = 0;\n  var aEnd = a.length - 1;\n  var bEnd = b.length - 1;\n  var aStartNode = a[aStart];\n  var bStartNode = b[bStart];\n  var aEndNode = a[aEnd];\n  var bEndNode = b[bEnd];\n  var i;\n  var j;\n  var stop = false;\n  var nextPos;\n  var next;\n  var aNode;\n  var bNode;\n  var lastTarget = 0;\n  var pos;\n  var node;\n\n  // Algorithm that works on simple cases with basic list\n  // transformations.\n  //\n  // It tries to reduce the diff problem by simultaneously iterating\n  // from the beginning and the end of both lists, if keys are the\n  // same, they're updated, if node is moved from the beginning to the\n  // end of the current cursor positions or vice versa it just\n  // performs move operation and continues to reduce the diff problem.\n  outer: do {\n    stop = true;\n\n    // Update nodes with the same key at the beginning.\n    while (aStartNode.key === bStartNode.key) {\n      vNodeUpdate(aStartNode, bStartNode, context);\n      aStart++;\n      bStart++;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aStartNode = a[aStart];\n      bStartNode = b[bStart];\n      stop = false;\n    }\n\n    // Update nodes with the same key at the end.\n    while (aEndNode.key === bEndNode.key) {\n      vNodeUpdate(aEndNode, bEndNode, context);\n      aEnd--;\n      bEnd--;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aEndNode = a[aEnd];\n      bEndNode = b[bEnd];\n      stop = false;\n    }\n\n    // Move nodes from left to right.\n    while (aStartNode.key === bEndNode.key) {\n      vNodeUpdate(aStartNode, bEndNode, context);\n      nextPos = bEnd + 1;\n      next = nextPos < b.length ? b[nextPos].ref : null;\n      vNodeMoveChild(parent, bEndNode, next);\n      aStart++;\n      bEnd--;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aStartNode = a[aStart];\n      bEndNode = b[bEnd];\n      stop = false;\n      continue outer;\n    }\n\n    // Move nodes from right to left.\n    while (aEndNode.key === bStartNode.key) {\n      vNodeUpdate(aEndNode, bStartNode, context);\n      vNodeMoveChild(parent, bStartNode, aStartNode.ref);\n      aEnd--;\n      bStart++;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aEndNode = a[aEnd];\n      bStartNode = b[bStart];\n      stop = false;\n    }\n  } while (!stop && aStart <= aEnd && bStart <= bEnd);\n\n  if (aStart > aEnd) {\n    // All nodes from a are updated, insert the rest from b.\n    nextPos = bEnd + 1;\n    next = nextPos < b.length ? b[nextPos].ref : null;\n    while (bStart <= bEnd) {\n      vNodeInsertChild(parent, b[bStart++], next, context);\n    }\n  } else if (bStart > bEnd) {\n    // All nodes from b are updated, remove the rest from a.\n    while (aStart <= aEnd) {\n      vNodeRemoveChild(parent, a[aStart++]);\n    }\n  } else {\n    // Perform more complex vNodeUpdate algorithm on the remaining nodes.\n    //\n    // We start by marking all nodes from b as inserted, then we try\n    // to find all removed nodes and simultaneously perform updates on\n    // the nodes that exists in both lists and replacing \"inserted\"\n    // marks with the position of the node from the list b in list a.\n    // Then we just need to perform slightly modified LIS algorithm,\n    // that ignores \"inserted\" marks and find common subsequence and\n    // move all nodes that doesn't belong to this subsequence, or\n    // insert if they have \"inserted\" mark.\n    var aLength = aEnd - aStart + 1;\n    var bLength = bEnd - bStart + 1;\n    var sources = new Array(bLength);\n\n    // Mark all nodes as inserted.\n    for (i = 0; i < bLength; i++) {\n      sources[i] = -1;\n    }\n\n    var moved = false;\n    var removeOffset = 0;\n\n    // When lists a and b are small, we are using naive O(M*N) algorithm\n    // to find removed children.\n    if (aLength * bLength <= 16) {\n      for (i = aStart; i <= aEnd; i++) {\n        var removed = true;\n        aNode = a[i];\n        for (j = bStart; j <= bEnd; j++) {\n          bNode = b[j];\n          if (aNode.key === bNode.key) {\n            sources[j - bStart] = i;\n\n            if (lastTarget > j) {\n              moved = true;\n            } else {\n              lastTarget = j;\n            }\n            vNodeUpdate(aNode, bNode, context);\n            removed = false;\n            break;\n          }\n        }\n        if (removed) {\n          vNodeRemoveChild(parent, aNode);\n          removeOffset++;\n        }\n      }\n    } else {\n      var keyIndex = {};\n\n      for (i = bStart; i <= bEnd; i++) {\n        node = b[i];\n        keyIndex[node.key] = i;\n      }\n\n      for (i = aStart; i <= aEnd; i++) {\n        aNode = a[i];\n        j = keyIndex[aNode.key];\n\n        if (j !== void 0) {\n          bNode = b[j];\n          sources[j - bStart] = i;\n          if (lastTarget > j) {\n            moved = true;\n          } else {\n            lastTarget = j;\n          }\n          vNodeUpdate(aNode, bNode, context);\n        } else {\n          vNodeRemoveChild(parent, aNode);\n          removeOffset++;\n        }\n      }\n    }\n\n    if (moved) {\n      var seq = _lis(sources);\n      // All modifications are performed from the right to left, so we\n      // can use insertBefore method and use reference to the html\n      // element from the next VNode. All Nodes from the right side\n      // should always be in the correct state.\n      j = seq.length - 1;\n      for (i = bLength - 1; i >= 0; i--) {\n        if (sources[i] === -1) {\n          pos = i + bStart;\n          node = b[pos];\n          nextPos = pos + 1;\n          next = nextPos < b.length ? b[nextPos].ref : null;\n          vNodeInsertChild(parent, node, next, context);\n        } else {\n          if (j < 0 || i != seq[j]) {\n            pos = i + bStart;\n            node = b[pos];\n            nextPos = pos + 1;\n            next = nextPos < b.length ? b[nextPos].ref : null;\n            vNodeMoveChild(parent, node, next);\n          } else {\n            j--;\n          }\n        }\n      }\n    } else if (aLength - removeOffset != bLength) {\n      for (i = bLength - 1; i >= 0; i--) {\n        if (sources[i] === -1) {\n          pos = i + bStart;\n          node = b[pos];\n          nextPos = pos + 1;\n          next = nextPos < b.length ? b[nextPos].ref : null;\n          vNodeInsertChild(parent, node, next, context);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it\n * ignores items that have -1 value. They're representing new items.\n *\n * This algorithm is used to find minimum number of move operations\n * when updating children with explicit keys.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param {Array.<number>} a\n * @return {Array.<number>}\n */\nfunction _lis(a) {\n  var p = a.slice(0);\n  var result = [0];\n  var i, il;\n  var j;\n  var u;\n  var v;\n  var c;\n\n  for (i = 0, il = a.length; i < il; i++) {\n    if (a[i] === -1) {\n      continue;\n    }\n\n    j = result[result.length - 1];\n    if (a[j] < a[i]) {\n      p[i] = j;\n      result.push(i);\n      continue;\n    }\n\n    u = 0;\n    v = result.length - 1;\n\n    while (u < v) {\n      c = ((u + v) / 2) | 0;\n      if (a[result[c]] < a[i]) {\n        u = c + 1;\n      } else {\n        v = c;\n      }\n    }\n\n    if (a[i] < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Components\n */\nvar C_DIRTY = 1;\nvar C_ATTACHED = 2;\nvar C_SVG = 3;\nvar C_MOUNTING = 4;\nvar C_SHOULD_UPDATE_VIEW_FLAGS = C_DIRTY | C_ATTACHED;\n\n/**\n * Component is a basic block to build user interfaces.\n *\n * @param {!Component} parent Parent component.\n * @param {Object} data Component data.\n * @param {Array<VNode>} children\n * @constructor\n */\nfunction Component(parent, data, children) {\n  /**\n   * Flags.\n   * @type {number}\n   */\n  this.flags = C_DIRTY;\n\n  /**\n   * Revision.\n   * @type {number}\n   */\n  this.rev = -1;\n\n  /**\n   * Depth relative to other Components.\n   * @type {number}\n   */\n  this.depth = parent == null ? 0 : parent.depth + 1;\n\n  /**\n   * Parent Component.\n   * @type {Component}\n   */\n  this.parent = parent;\n\n  this.data = data;\n  this.children = children;\n\n  /**\n   * Root node in the Components virtual tree.\n   * @type {VNode}\n   */\n  this.root = null;\n\n  /**\n   * Reference to the Html Element.\n   * @type {HTMLElement}\n   */\n  this.element = null;\n\n  /**\n   * vNodeUpdate bound method.\n   * @type {function(this:!Component)}\n   */\n  this._update = null;\n\n  /**\n   * invalidate bound method.\n   * @type {function(this:!Component)}\n   */\n  this._invalidate = null;\n}\n\nComponent.DIRTY = C_DIRTY;\nComponent.ATTACHED = C_ATTACHED;\nComponent.SVG = C_SVG;\nComponent.MOUNTING = C_MOUNTING;\nComponent.SHOULD_UPDATE_VIEW_FLAGS = C_SHOULD_UPDATE_VIEW_FLAGS;\n\n/**\n * Tag name of the root [element].\n */\nComponent.prototype.tag = 'div';\n\n/**\n * Lifecycle method [create].\n *\n * [create] method should create root [element] of the [Component].\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.create = function() {\n  this.element = document.createElement(this.tag);\n};\n\n/**\n * Lifecycle method [mount].\n *\n * [mount] method should mount [Component] on top of [e] element.\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.mount = function(element) {\n  this.flags |= C_MOUNTING;\n  this.element = element;\n};\n\n/**\n * Lifecycle method [init].\n *\n * Initialize component. This method is called after [create],\n * or [mount] methods.\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.init = function() {};\n\nComponent.prototype.updateData = function(data) {\n  if (this.data !== data) {\n    this.data = data;\n    this.invalidate();\n  }\n};\n\nComponent.prototype.updateChildren = function(children) {\n  if (this.children !== children) {\n    this.children = children;\n    this.invalidate();\n  }\n};\n\n/**\n * Lifecycle method [vNodeUpdate].\n *\n * This method updates [Component] state, and if state is changed,\n * it will vNodeUpdate view.\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.update = function() {\n  if ((this.flags & C_SHOULD_UPDATE_VIEW_FLAGS) == C_SHOULD_UPDATE_VIEW_FLAGS) {\n    if (this.updateState()) {\n      this.updateView();\n    }\n    this.rev = ENV.scheduler.clock;\n    this.flags &= ~C_DIRTY;\n    this.updated();\n  }\n};\n\n/**\n * Lifecycle method [updateState].\n *\n * vNodeUpdate internal state, it should return [:bool:] value that indicates\n * that the internal state changes will result in modified view\n * representation of the component.\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.updateState = function() { return true; };\n\n/**\n * Lifecycle method [updateView].\n *\n * vNodeUpdate view.\n *\n * Invoked during the [Scheduler] writeDom phase.\n */\nComponent.prototype.updateView = function() {};\n\n/**\n * Update internal tree using virtual dom representation.\n *\n * If this method is called during [isMounting] phase, then virtual dom\n * will be mounted on top of existing html tree.\n */\nComponent.prototype.updateRoot = function(newRoot) {\n  if (this.root == null) {\n    newRoot.cref = this;\n    if ((this.flags & C_MOUNTING) !== 0) {\n      vNodeMount(this.element, this);\n      this.flags &= ~C_MOUNTING;\n    } else {\n      newRoot.ref = this.element;\n      vNodeRender(newRoot, this);\n    }\n  } else {\n    vNodeUpdate(this.root, newRoot, this);\n  }\n  this.root = newRoot;\n};\n\n/**\n * Invalidate [Component].\n *\n * Component will be marked as dirty and added to the vNodeUpdate queue. All\n * transient subscriptions will be canceled immediately.\n */\nComponent.prototype.invalidate = function() {\n  if ((this.flags & C_DIRTY) === 0) {\n    var scheduler = ENV.scheduler;\n\n    this.flags |= C_DIRTY;\n    if (this._update == null) {\n      this._update = this.update.bind(this);\n    }\n\n    //if ((scheduler.flags & S_FRAME_RUNNING) === 0) {\n      scheduler.nextFrame().write(this._update, this.depth);\n    //}\n\n    this.cancelTransientSubs();\n    this.invalidated();\n  }\n};\n\n/**\n * Dispose [Component]\n *\n * This method should be called when [Component] is no longer in use.\n *\n * NOTE: Use it only when you want to manually control the lifecycle of the\n * [Component], otherwise just use helper methods like [injectComponent]\n * that will call lifecycle methods in the right order.\n */\nComponent.prototype.dispose = function() {\n  if (this.root != null) {\n    this.root.dispose();\n  }\n  if ((this.flags & C_ATTACHED) !== 0) {\n    this.flags |= C_ATTACHED;\n    this.detached();\n  }\n  this.cancelTransientSubs();\n  this.cancelSubs();\n  this.disposed();\n};\n\n/**\n * Attach [Component]\n *\n * This method should be called when [Component] is attached to the\n * html document.\n *\n * NOTE: Use it only when you want to manually control the lifecycle of the\n * [Component], otherwise just use helper methods like [injectComponent]\n * that will call lifecycle methods in the right order.\n */\nComponent.prototype.attach = function() {\n  this.flags |= C_ATTACHED;\n  this.attached();\n  if (this.root != null) {\n    vNodeAttach(this.root);\n  }\n};\n\n/**\n * Detach [Component]\n *\n * This method should be called when [Component] is detached to the\n * html document.\n *\n * NOTE: Use it only when you want to manually control the lifecycle of the\n * [Component], otherwise just use helper methods like [injectComponent]\n * that will call lifecycle methods in the right order.\n */\nComponent.prototype.detach = function() {\n  if (this.root != null) {\n    vNodeDetach(this.root);\n  }\n  this.flags &= ~C_ATTACHED;\n  this.detached();\n};\n\n/**\n * Lifecycle method [invalidated].\n *\n * Invoked after [invalidate] method is called.\n */\nComponent.prototype.invalidated = function() {};\n\n/**\n * Lifecycle method [updated].\n *\n * Invoked during the [Scheduler] writeDom phase after [vNodeUpdate] method is\n * finished.\n */\nComponent.prototype.updated = function() {};\n\n/**\n * Lifecycle method [attached].\n *\n * Invoked during the [Scheduler] writeDom phase when [Component] is\n * attached to the html document.\n */\nComponent.prototype.attached = function() {};\n\n/**\n * Lifecycle method [detached].\n *\n * Invoked during the [Scheduler] writeDom phase when [Component] is\n * detached from the html document.\n */\nComponent.prototype.detached = function() {};\n\n/**\n * Lifecycle method [disposed].\n *\n * Invoked during the [Scheduler] writeDom phase when [Component] is\n * disposed.\n */\nComponent.prototype.disposed = function() {};\n\nComponent.prototype.cancelSubs = function() {};\nComponent.prototype.cancelTransientSubs = function() {};\n\nfunction injectComponent(component, parent) {\n  component.create();\n  component.init();\n  parent.appendChild(component.element);\n  component.attach();\n  component.update();\n}\n\nmodule.exports = {\n  VNode: VNode,\n  Component: Component,\n  create: vNodeCreate,\n  render: vNodeRender,\n  update: vNodeUpdate,\n  attach: vNodeAttach,\n  detach: vNodeDetach,\n  attached: vNodeAttached,\n  detached: vNodeDetached,\n  t: text,\n  $t: $text,\n  e: element,\n  $e: $element,\n  s: svg,\n  $s: $svg,\n  c: component,\n  $c: $component,\n  r: root,\n  injectComponent: injectComponent\n};\n\n},{\"./env\":2,\"./scheduler\":4}],7:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\n\nvar Popover = require('./popover');\n\nfunction _formatElapsed(v) {\n  if (!v) return '';\n\n  var str = parseFloat(v).toFixed(2);\n\n  if (v > 60) {\n    var minutes = Math.floor(v / 60);\n    var comps = (value % 60).toFixed(2).split('.');\n    var seconds = comps[0].lpad('0', 2);\n    var ms = comps[1];\n    str = minutes + \":\" + seconds + \".\" + ms;\n  }\n\n  return str;\n}\n\nvar _IMPORTANT_CLASS = ['label-important'];\nvar _WARNING_CLASS = ['label-warning'];\nvar _SUCCESS_CLASS = ['label-success'];\n\nfunction Entry(context, data, children) {\n  vdom.Component.call(this, context, data, children);\n}\nkivi.inherits(Entry, vdom.Component);\n\nEntry.prototype.tag = 'tr';\n\nEntry.prototype.updateView = function() {\n  var db = this.data.db;\n  var topFiveQueries = db.getTopFiveQueries();\n\n  var name = vdom.e('td');\n  name.type = 'dbname';\n  name.children = [vdom.t(db.name)];\n\n  var count = db.queries.length;\n\n  var qcSpan = vdom.e('span');\n  qcSpan.type = 'label';\n  qcSpan.children = [vdom.t(count)];\n  if (count >= 20) {\n    qcSpan.classes = _IMPORTANT_CLASS;\n  } else if (count >= 10) {\n    qcSpan.classes = _WARNING_CLASS;\n  } else {\n    qcSpan.classes = _SUCCESS_CLASS;\n  }\n\n  var qc = vdom.e('td');\n  qc.type = 'query-count';\n  qc.children = [qcSpan];\n\n  var children = [name, qc];\n\n  for (var i = 0; i < 5; i++) {\n    var q = topFiveQueries[i];\n    var elapsed = q.elapsed;\n    var text = vdom.t(_formatElapsed(elapsed));\n    var popover = vdom.c(Popover, {query: q.query});\n\n    var col = vdom.e('td');\n    col.type = 'Query';\n    var classes = [];\n    classes.push('elapsed');\n    if (elapsed >= 10.0) {\n      classes.push('warn_long');\n    } else if (elapsed >= 1.0) {\n      classes.push('warn');\n    } else {\n      classes.push('short');\n    }\n    col.classes = classes;\n    col.children = [text, popover];\n    children.push(col);\n  }\n\n  var root = vdom.r();\n  root.children = children;\n\n  this.updateRoot(root);\n};\n\nmodule.exports = Entry;\n\n},{\"./popover\":9,\"kivi\":3}],8:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\nvar Entry = require('./entry');\n\nvar _ROOT_CLASSES = ['table', 'table-striped', 'latest-data'];\n\nfunction Main(context, data, children) {\n  vdom.Component.call(this, context, data, children);\n}\nkivi.inherits(Main, vdom.Component);\n\nMain.prototype.tag = 'table';\n\nMain.prototype.updateView = function() {\n  var dbs = this.data;\n\n  var rows = [];\n  for (var i = 0; i < dbs.length; i++) {\n    var db = dbs[i];\n    rows.push(vdom.$c(db.id, Entry, {db: db}));\n  }\n\n  var tbody = vdom.e('tbody');\n  tbody.children = rows;\n  var root = vdom.r();\n  root.classes = _ROOT_CLASSES;\n  root.children = [tbody];\n\n  this.updateRoot(root);\n};\n\nmodule.exports = Main;\n\n},{\"./entry\":7,\"kivi\":3}],9:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\n\nvar _ROOT_CLASSES = ['popover', 'left'];\n\nfunction Popover(context, data, children) {\n  vdom.Component.call(this, context, data, children);\n}\nkivi.inherits(Popover, vdom.Component);\n\nPopover.prototype.updateView = function() {\n  var content = vdom.e('div');\n  content.type = 'popover-content';\n  content.children = [vdom.t(this.data.query)];\n\n  var arrow = vdom.e('div');\n  arrow.type = 'arrow';\n\n  var root = vdom.r();\n  root.classes = _ROOT_CLASSES;\n  root.children = [content, arrow];\n\n  this.updateRoot(root);\n};\n\nmodule.exports = Popover;\n\n},{\"kivi\":3}],10:[function(require,module,exports){\n'use strict';\n\nfunction Query(elapsed, waiting, query) {\n  this.elapsed = elapsed;\n  this.waiting = waiting;\n  this.query = query;\n}\n\nQuery.rand = function() {\n  var elapsed = Math.random() * 15;\n  var waiting = Math.random() < 0.5;\n  var query = 'SELECT blah FROM something';\n\n  if (Math.random() < 0.2) {\n    query = '<IDLE> in transaction';\n  }\n\n  if (Math.random() < 0.1) {\n    query = 'vacuum';\n  }\n\n  return new Query(elapsed, waiting, query);\n};\n\nvar _nextId = 0;\nfunction Database(name) {\n  this.id = _nextId++;\n  this.name = name;\n  this.queries = null;\n\n  this.update();\n}\n\nDatabase.prototype.update = function() {\n  var queries = [];\n\n  var r = Math.floor((Math.random() * 10) + 1);\n  for (var j = 0; j < r; j++) {\n    queries.push(Query.rand());\n  }\n\n  this.queries = queries;\n};\n\nDatabase.prototype.getTopFiveQueries = function() {\n  var qs = this.queries.slice();\n  qs.sort(function(a, b) {\n    return a.elapsed - b.elapsed;\n  });\n  qs = qs.slice(0, 5);\n  while (qs.length < 5) {\n    qs.push(new Query(0.0, false, ''));\n  }\n  return qs;\n};\n\nmodule.exports = {\n  Query: Query,\n  Database: Database\n};\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}