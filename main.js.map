{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"main","kivi","init","Scheduler","dbs","N","push","data","Database","nextFrame","write","vdom","inject","Main","interval","I","document","body","addEventListener","./component/main","./data","kivi/lib/scheduler",2,"module","ENV","scheduler",3,"scheduleMicrotask","cb","action","utils","toFastObj","inherits","shallowEq","./env","./utils","./vdom",4,"_MutationObserverScheduler","this","_observer","window","MutationObserver","_node","createTextNode","observe","characterData","Frame","flags","writeTaskGroups","writeTasks","readTasks","afterTasks","dataClock","clock","_actions","_microtasks","_currentFrame","_nextFrame","self","_microtaskScheduler","S_MICROTASK_PENDING","S_RUNNING","tasks","performActions","_handleAnimationFrame","frame","groups","group","task","j","S_FRAMETASK_PENDING","F_WRITE_ANY","F_WRITE_PRIO","F_WRITE","F_READ","F_AFTER","prototype","requestNextTick","_toggle","priority","read","after","S_MICROTASK_RUNNING","S_FRAMETASK_RUNNING","RUNNING","FRAMETASK_RUNNING","MICROTASK_RUNNING","currentFrame","requestAnimationFrame","actions",5,"childCtor","parentCtor","tempCtor","constructor","b","key","keys","Object","hasOwnProperty",6,"VNode","tag","type","attrs","customAttrs","style","classes","children","ref","cref","text","content","V_TEXT","$text","element","V_ELEMENT","$element","svg","V_SVG","$svg","component","descriptor","V_COMPONENT","$component","root","V_ROOT","vNodeSameType","createVNode","node","context","createElement","createElementNS","createComponent","renderVNode","il","className","classList","setAttribute","setProperty","join","add","updateComponent","vNodeInsertChild","updateVNode","nodeValue","updateAttrs","updateStyle","updateClasses","setData","updateChildren","aValue","bValue","removeAttribute","removeProperty","aCls","bCls","unchangedPosition","remove","aStart","bStart","aEnd","bEnd","removed","visited","Array","disposeVNode","disposeComponent","parent","nextRef","insertBefore","vNodeMoveChild","vNodeRemoveChild","removeChild","aNode","bNode","updated","updateImplicitChildren","updateExplicitChildren","nextPos","next","pos","aStartNode","bStartNode","aEndNode","bEndNode","stop","lastTarget","outer","aLength","bLength","sources","moved","removeOffset","keyIndex","seq","_lis","v","c","p","slice","result","CDescriptor","update","invalidated","disposed","decl","spec","ComponentSetData","Component","C_SHOULD_UPDATE_FLAGS","depth","state","_update","C_DIRTY","C_ATTACHED","container","appendChild","TEXT","ELEMENT","COMPONENT","ROOT","SVG","C_SVG","C_MOUNTING","DIRTY","ATTACHED","MOUNTING","SHOULD_UPDATE_FLAGS","updateRoot","newRoot","vNodeMount","invalidate","$t","$e","$s","$c","./scheduler",7,"_formatElapsed","str","parseFloat","toFixed","minutes","Math","floor","comps","value","split","seconds","lpad","ms","Popover","_IMPORTANT_CLASS","_WARNING_CLASS","_SUCCESS_CLASS","Entry","db","topFiveQueries","getTopFiveQueries","name","count","queries","qcSpan","qc","q","elapsed","popover","query","col","./popover",8,"_ROOT_CLASSES","setInterval","rows","id","tbody","./entry",9,"arrow",10,"Query","waiting","_nextId","rand","random","qs","sort"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar I = 0;\nvar N = 100;\n\nvar kivi = require('kivi');\nvar Scheduler = require('kivi/lib/scheduler');\n\nvar data = require('./data');\nvar Main = require('./component/main');\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  main();\n});\n\nfunction main() {\n  kivi.init(new Scheduler());\n\n  var dbs = [];\n  for (var i = 0; i < N; i++) {\n    dbs.push(new data.Database('cluster' + i));\n    dbs.push(new data.Database('cluster' + i + 'slave'));\n  }\n\n  kivi.nextFrame().write(function() {\n    kivi.vdom.inject(Main, {dbs: dbs, interval: I}, document.body);\n  });\n}\n\n},{\"./component/main\":8,\"./data\":10,\"kivi\":3,\"kivi/lib/scheduler\":4}],2:[function(require,module,exports){\n'use strict';\n\nvar ENV = {\n  scheduler: null\n};\n\nmodule.exports = ENV;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar ENV = require('./env');\nvar vdom = require('./vdom');\nvar utils = require('./utils');\n\nfunction init(scheduler) {\n  ENV.scheduler = scheduler;\n}\n\nfunction nextFrame() {\n  return ENV.scheduler.nextFrame();\n}\n\nfunction scheduleMicrotask(cb) {\n  ENV.scheduler.scheduleMicrotask(cb);\n}\n\nfunction action(cb) {\n  ENV.scheduler.action(cb);\n}\n\nmodule.exports = {\n  ENV: ENV,\n  vdom: vdom,\n  init: init,\n  nextFrame: nextFrame,\n  scheduleMicrotask: scheduleMicrotask,\n  action: action,\n  toFastObj: utils.toFastObj,\n  inherits: utils.inherits,\n  shallowEq: utils.shallowEq\n};\n\n},{\"./env\":2,\"./utils\":5,\"./vdom\":6}],4:[function(require,module,exports){\n'use strict';\n\nfunction _MutationObserverScheduler(cb) {\n  this._observer = new window.MutationObserver(cb);\n  this._node = document.createTextNode('');\n  this._observer.observe(this._node, {characterData: true});\n}\n\n_MutationObserverScheduler.prototype.requestNextTick = function() {\n  this._toggle ^= 1;\n  this._node.data = this._toggle;\n};\n\nvar F_WRITE_PRIO = 4;\nvar F_WRITE = 8;\nvar F_READ = 16;\nvar F_AFTER = 32;\nvar F_WRITE_ANY = F_WRITE | F_WRITE_PRIO;\n\nfunction Frame() {\n  this.flags = 0|0;\n  this.writeTaskGroups = [];\n  this.writeTasks = null;\n  this.readTasks = null;\n  this.afterTasks = null;\n}\n\nFrame.prototype.write = function(cb, priority) {\n  var group;\n\n  if (priority === void 0) priority = -1;\n\n  if (priority === -1) {\n    this.flags |= F_WRITE;\n    if (this.writeTasks == null) {\n      this.writeTasks = [];\n    }\n    this.writeTasks.push(cb);\n  } else {\n    this.flags |= F_WRITE_PRIO;\n    while (priority >= this.writeTaskGroups.length) {\n      this.writeTaskGroups.push(null);\n    }\n\n    group = this.writeTaskGroups[priority];\n    if (group == null) {\n      group = this.writeTaskGroups[priority] = [];\n    }\n\n    group.push(cb);\n  }\n};\n\nFrame.prototype.read = function(cb) {\n  this.flags |= F_READ;\n  if (this.readTasks == null) {\n    this.readTasks = [];\n  }\n  this.readTasks.push(cb);\n};\n\nFrame.prototype.after = function(cb) {\n  this.flags |= F_AFTER;\n  if (this.afterTasks == null) {\n    this.afterTasks = [];\n  }\n  this.afterTasks.push(cb);\n};\n\nvar S_RUNNING = 1;\nvar S_MICROTASK_PENDING = 2;\nvar S_FRAMETASK_PENDING = 4;\nvar S_MICROTASK_RUNNING = 8;\nvar S_FRAMETASK_RUNNING = 16;\n\nfunction Scheduler() {\n  this.flags = 0|0;\n  this.dataClock = 0;\n  this.clock = -1;\n\n  this._actions = null;\n\n  this._microtasks = null;\n  this._currentFrame = new Frame();\n  this._nextFrame = new Frame();\n\n  var self = this;\n\n  this._microtaskScheduler = new _MutationObserverScheduler(function() {\n    self.flags &= ~S_MICROTASK_PENDING;\n    self.flags |= S_RUNNING;\n    self.clock++;\n\n    var tasks = self._microtasks;\n    if (tasks != null) {\n      self._microtasks = null;\n\n      for (var i = 0; i < tasks.length; i++) {\n        tasks[i]();\n      }\n    }\n\n    self.dataClock++;\n    self.performActions();\n    self.flags &= ~S_RUNNING;\n  });\n\n  this._handleAnimationFrame = function() {\n    var frame;\n    var groups;\n    var group;\n    var task;\n    var i, j;\n\n    self.flags &= ~S_FRAMETASK_PENDING;\n    self.flags |= S_RUNNING;\n    self.clock++;\n\n    frame = self._nextFrame;\n    self._nextFrame = self._currentFrame;\n    self._currentFrame = frame;\n\n    do {\n      while ((frame.flags & F_WRITE_ANY) !== 0) {\n        if ((frame.flags & F_WRITE_PRIO) !== 0) {\n          frame.flags &= ~F_WRITE_PRIO;\n          groups = frame.writeTaskGroups;\n\n          for (i = 0; i < groups.length; i++) {\n            group = groups[i];\n            if (group != null) {\n              groups[i] = null;\n              for (j = 0; j < group.length; j++) {\n                task = group[j];\n                task();\n              }\n            }\n          }\n        }\n\n        if ((frame.flags & F_WRITE) !== 0) {\n          frame.flags &= ~F_WRITE;\n          group = frame.writeTasks;\n          for (i = 0; i < group.length; i++) {\n            task = group[i];\n            task();\n          }\n        }\n      }\n\n      while ((frame.flags & F_READ) !== 0) {\n        frame.flags &= ~F_READ;\n        group = frame.readTasks;\n        frame.readTasks = null;\n\n        for (i = 0; i < group.length; i++) {\n          task = group[i];\n          task();\n        }\n      }\n    } while ((frame.flags & F_WRITE_ANY) !== 0);\n\n    while ((frame.flags & F_AFTER) !== 0) {\n      frame.flags &= ~F_AFTER;\n\n      group = frame.afterTasks;\n      for (i = 0; i < group.length; i++) {\n        task = group[i];\n        task();\n      }\n    }\n\n    self.dataClock++;\n    self.performActions();\n    self.flags &= ~S_RUNNING;\n  };\n}\n\nScheduler.RUNNING = S_RUNNING;\nScheduler.FRAMETASK_RUNNING = S_FRAMETASK_RUNNING;\nScheduler.MICROTASK_RUNNING = S_MICROTASK_RUNNING;\n\nScheduler.prototype.currentFrame = function() {\n  return this._currentFrame;\n};\n\nScheduler.prototype.nextFrame = function() {\n  if ((this.flags & S_FRAMETASK_PENDING) === 0) {\n    this.flags |= S_FRAMETASK_PENDING;\n    window.requestAnimationFrame(this._handleAnimationFrame);\n  }\n  return this._nextFrame;\n};\n\nScheduler.prototype.scheduleMicrotask = function(cb) {\n  if ((this.flags & S_MICROTASK_PENDING) === 0) {\n    this.flags |= S_MICROTASK_PENDING;\n    this._microtaskScheduler.requestNextTick();\n  }\n\n  if (this._microtasks == null) {\n    this._microtasks = [];\n  }\n\n  this._microtasks.push(cb);\n};\n\nScheduler.prototype.action = function(cb) {\n  if ((this.flags & S_MICROTASK_PENDING) === 0) {\n    this.flags |= S_MICROTASK_PENDING;\n    this._microtaskScheduler.requestNextTick();\n  }\n\n  if (this._actions == null) {\n    this._actions = [];\n  }\n\n  this._actions.push(cb);\n};\n\nScheduler.prototype.performActions = function() {\n  while (this._actions != null) {\n    var actions = this._actions;\n    this._actions = null;\n    for (var i = 0; i < actions.length; i++) {\n      actions[i]();\n    }\n  }\n};\n\nmodule.exports = Scheduler;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nfunction inherits(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {};\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  childCtor.prototype.constructor = childCtor;\n}\n\nfunction shallowEq(a, b) {\n  var i;\n  var key;\n  var keys;\n\n  keys = Object.keys(a);\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    if (!b.hasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  keys = Object.keys(b);\n  for (i = 0; i < keys.length; i++) {\n    if (!a.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = {\n  inherits: inherits,\n  shallowEq: shallowEq\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar Scheduler = require('./scheduler');\nvar ENV = require('./env');\n\n/** Flag indicating that [VNode] is [Text]. */\nvar V_TEXT = 1;\n/** Flag indicating that [VNode] is [Element]. */\nvar V_ELEMENT = 2;\n/** Flag indicating that [VNode] is [Component]. */\nvar V_COMPONENT = 4;\n/** Flag indicating that [VNode] is root element of the [Component]. */\nvar V_ROOT = 8;\n/** Flag indicating that [VNode] represents node that is in svg namespace. */\nvar V_SVG = 16;\n\n/**\n * Virtual DOM Node.\n *\n * @param flags Flags.\n * @param key Key that should be unique among its siblings. If the key is\n *   `null`, it means that the key is implicit. When [key] is implicit, all\n *   siblings should also have implicit keys, otherwise it will result in\n *   undefined behaviour in \"production\" mode, or runtime error in\n *   \"development\" mode.\n * @param tag Tag should contain tag name if [VNode] represents an element, or\n *   reference to the [componentConstructor] if it represents a\n *   [Component].\n * @param data Data that should be passed to [Component]s. Data is transferred\n *   to the [Component] using `set data(P data)` setter. When [VNode]\n *   represents an element, [data] is used as a cache for className string\n *   that was built from [type] and [classes] properties.\n * @constructor\n */\nfunction VNode(flags, key, tag, data) {\n  this.flags = flags;\n  this.key = key;\n  this.tag = tag;\n  this.data = data;\n\n  /**\n   * Immutable class name\n   * @type {string}\n   */\n  this.type = null;\n  /**\n   * Attributes\n   * @type {Object<number,string>}\n   */\n  this.attrs = null;\n  /**\n   * Custom Attributes\n   * @type {Object<string,string>}\n   */\n  this.customAttrs = null;\n  /**\n   * Style\n   * @type {Object<number,string>}\n   */\n  this.style = null;\n  /**\n   * Classes\n   * @type {Array<string>}\n   */\n  this.classes = null;\n  /**\n   * List of children nodes. When [VNode] represents a [Component], children\n   * nodes are transferred to the [Component] with\n   * `Component.updateChildren(c)` method.\n   * @type {Array<VNode>}\n   */\n  this.children = null;\n  /**\n   * Reference to the [Node]. It will be available after [VNode] is\n   * [createVNode]d or [updateVNode]d. Each time [VNode] is updated, reference to the\n   * [Node] is passed from the previous node to the new one.\n   * @type {Node}\n   */\n  this.ref = null;\n  /**\n   * Reference to the [Component]. It will be available after [VNode] is\n   * [createVNode]d or [updateVNode]d. Each time [VNode] is updated, reference to the\n   * [Component] is passed from the previous node to the new one.\n   * @type {Component}\n   */\n  this.cref = null;\n}\n\nVNode.TEXT = V_TEXT;\nVNode.ELEMENT = V_ELEMENT;\nVNode.COMPONENT = V_COMPONENT;\nVNode.ROOT = V_ROOT;\nVNode.SVG = V_SVG;\n\nfunction text(content) {\n  return new VNode(V_TEXT, null, null, content);\n}\n\nfunction $text(key, content) {\n  return new VNode(V_TEXT, key, null, content);\n}\n\nfunction element(tag) {\n  return new VNode(V_ELEMENT, null, tag, null);\n}\n\nfunction $element(key, tag) {\n  return new VNode(V_ELEMENT, key, tag, null);\n}\n\nfunction svg(tag) {\n  return new VNode(V_ELEMENT | V_SVG, null, tag, null);\n}\n\nfunction $svg(key, tag) {\n  return new VNode(V_ELEMENT | V_SVG, key, tag, null);\n}\n\nfunction component(descriptor, data) {\n  if (data === void 0) data = null;\n  return new VNode(V_COMPONENT, null, descriptor, data);\n}\n\nfunction $component(key, descriptor, data) {\n  if (data === void 0) data = null;\n  return new VNode(V_COMPONENT, key, descriptor, data);\n}\n\nfunction root() {\n  return new VNode(V_ROOT, null, null, null);\n}\n\n/**\n * Checks if two VNodes have the same type and they can be updated.\n *\n * @param {VNode} a\n * @param {VNode} b\n * @return {boolean}\n */\nfunction vNodeSameType(a, b) {\n  return (a.flags === b.flags && a.tag === b.tag);\n}\n\n/**\n * Create root level element of the [VNode] object, or [Component] for\n * component nodes.\n *\n * @param {VNode} node\n * @param {Component} context\n */\nfunction createVNode(node, context) {\n  var flags = node.flags;\n\n  if ((flags & V_TEXT) !== 0) {\n    node.ref = document.createTextNode(node.data);\n  } else if ((flags & V_ELEMENT) !== 0) {\n    if ((flags & V_SVG) === 0) {\n      node.ref = document.createElement(node.tag);\n    } else {\n      node.ref = document.createElementNS('http://www.w3.org/2000/svg', node.tag);\n    }\n  } else if ((flags & V_COMPONENT) !== 0) {\n    var component = createComponent(node.tag, node.data, node.children, context);\n    node.ref = component.element;\n    node.cref = component;\n  }\n}\n\n/**\n * Render internal representation of the VNode.\n *\n * @param {VNode} node\n * @param {Component} context\n */\nfunction renderVNode(node, context) {\n  var i, il;\n  var key;\n  var keys;\n  var flags = node.flags;\n  var ref;\n  var style;\n  var className;\n  var classList;\n\n  if ((flags & (V_ELEMENT | V_COMPONENT | V_ROOT)) !== 0) {\n    ref = node.ref;\n    if (node.attrs != null) {\n      keys = Object.keys(node.attrs);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        ref.setAttribute(key, node.attrs[key]);\n      }\n    }\n\n    if (node.style != null) {\n      style = ref.style;\n      keys = Object.keys(node.style);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        style.setProperty(key, node.style[key]);\n      }\n    }\n\n    if ((flags & (V_ELEMENT | V_COMPONENT)) !== 0) {\n      className = null;\n      if (node.type != null) {\n        className = node.type;\n      }\n      if (node.classes != null) {\n        var classes = node.classes.join(' ');\n        className = (className == null) ? classes : className + ' ' + classes;\n      }\n      if (className != null) {\n        node.data = className;\n        ref.className = className;\n      }\n    } else {\n      classList = null;\n      if (node.type != null) {\n        classList = ref.classList;\n        classList.add(node.type);\n      }\n\n      if (node.classes != null) {\n        if (classList == null) {\n          classList = ref.classList;\n        }\n\n        for (i = 0, il = node.classes.length; i < il; i++) {\n          classList.add(node.classes[i]);\n        }\n      }\n    }\n\n    if ((flags & V_COMPONENT) !== 0) {\n      updateComponent(node.cref);\n    } else if (node.children != null) {\n      for (i = 0, il = node.children.length; i < il; i++) {\n        vNodeInsertChild(node, node.children[i], null, context);\n      }\n    }\n  }\n}\n\n/**\n * Update VNode. When VNode a is updated with VNode b, VNode a should\n * be considered as destroyed, and any access to it is an undefined\n * behaviour.\n *\n * @param {!VNode} a Old VNode\n * @param {!VNode} b New VNode\n * @param {Context} context\n */\nfunction updateVNode(a, b, context) {\n  var ref = a.ref;\n  var flags = a.flags;\n  var classes;\n  var className;\n  var component;\n\n  b.ref = ref;\n\n  if ((flags & V_TEXT) !== 0) {\n    if (a.data != b.data) {\n      a.ref.nodeValue = b.data;\n    }\n  } else if ((flags & (V_ELEMENT | V_COMPONENT | V_ROOT)) !== 0) {\n    if (a.attrs !== b.attrs) {\n      updateAttrs(a.attrs, b.attrs, ref);\n    }\n    if (a.style !== b.style) {\n      updateStyle(a.style, b.style, ref.style);\n    }\n\n    if ((flags & V_ELEMENT) !== 0) {\n      if (a.classes !== b.classes) {\n        if (b.data == null) {\n          className = b.type;\n          if (b.classes != null) {\n            classes = b.classes.join(' ');\n            className = (className == null) ? classes : className + ' ' + classes;\n          }\n          b.data = className;\n        }\n        if (a.data !== b.data) {\n          if (b.data == null) {\n            ref.className = '';\n          } else {\n            ref.className = className;\n          }\n        }\n      } else {\n        b.data = a.data;\n      }\n    } else if (a.classes !== b.classes) {\n      updateClasses(a.classes, b.classes, ref.classList);\n    }\n\n    if ((flags & V_COMPONENT) !== 0) {\n      component = b.cref = a.cref;\n      component.descriptor.setData(component, b.data);\n      // setChildren();\n      updateComponent(component);\n    } else {\n      updateChildren(a, a.children, b.children, context);\n    }\n  }\n}\n\n/**\n * Update HTMLElement attributes.\n *\n * @param a Old attributes.\n * @param b New attributes.\n * @param node\n */\nfunction updateAttrs(a, b, node) {\n  var i, il;\n  var key;\n  var keys;\n  var aValue;\n  var bValue;\n\n  if (a != null) {\n    if (b == null) {\n      // b is empty, remove all attributes from a.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        node.removeAttribute(keys[i]);\n      }\n    } else {\n      // Remove and updateVNode attributes.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (b.hasOwnProperty(key)) {\n          aValue = a[key];\n          bValue = b[key];\n          if (aValue !== bValue) {\n            node.setAttribute(key, bValue);\n          }\n        } else {\n          node.removeAttribute(key);\n        }\n      }\n\n      // Insert new attributes.\n      keys = Object.keys(b);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (!a.hasOwnProperty(key)) {\n          node.setAttribute(key, b[key]);\n        }\n      }\n    }\n  } else if (b != null) {\n    // a is empty, insert all attributes from b.\n    keys = Object.keys(b);\n    for (i = 0, il = keys.length; i < il; i++) {\n      key = keys[i];\n      node.setAttribute(key, b[key]);\n    }\n  }\n}\n\n/**\n * Update HTMLElement styles.\n *\n * @param {Object.<string,string>} a Old style.\n * @param {Object.<string,string>} b New style.\n * @param {CSSStyleDeclaration} style\n */\nfunction updateStyle(a, b, style) {\n  var i, il;\n  var key;\n  var keys;\n\n  if (a != null) {\n    if (b == null) {\n      // b is empty, remove all styles from a.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        style.removeProperty(keys[i]);\n      }\n    } else {\n      // Remove and updateVNode styles.\n      keys = Object.keys(a);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (b.hasOwnProperty(key)) {\n          style.setProperty(key, b[key], '');\n        } else {\n          style.removeProperty(key);\n        }\n      }\n\n      // Insert new styles.\n      keys = Object.keys(b);\n      for (i = 0, il = keys.length; i < il; i++) {\n        key = keys[i];\n        if (!a.hasOwnProperty(key)) {\n          style.setProperty(key, b[key], '');\n        }\n      }\n    }\n  } else if (b != null) {\n    // a is empty, insert all styles from b.\n    keys = Object.keys(b);\n    for (i = 0, il = keys.length; i < il; i++) {\n      key = keys[i];\n      style.setProperty(key, b[key], '');\n    }\n  }\n}\n\n/**\n * Update HTMLElement classes.\n *\n * @param {Array.<string>} a Old classes.\n * @param {Array.<string>} b New classes.\n * @param {DOMTokenList} classList\n */\nfunction updateClasses(a, b, classList) {\n  var i;\n  var aCls, bCls;\n  var unchangedPosition;\n\n  if (a != null && a.length !== 0) {\n    if (b == null || b.length === 0) {\n      // b is empty, remove all classes from a.\n      for (i = 0; i < a.length; i++) {\n        classList.remove(a[i]);\n      }\n    } else {\n      if (a.length === 1 && b.length === 1) {\n        // Fast path when a and b have only one class.\n        aCls = a[0];\n        bCls = b[0];\n\n        if (aCls !== bCls) {\n          classList.remove(aCls);\n          classList.add(bCls);\n        }\n      } else if (a.length === 1) {\n        // Fast path when a have 1 class.\n        aCls = a[0];\n        unchangedPosition = -1;\n        for (i = 0; i < b.length; i++) {\n          bCls = b[i];\n          if (aCls === bCls) {\n            unchangedPosition = i;\n            break;\n          } else {\n            classList.add(bCls);\n          }\n        }\n        if (unchangedPosition !== -1) {\n          for (i = unchangedPosition + 1; i < b.length; i++) {\n            classList.add(b[i]);\n          }\n        } else {\n          classList.remove(aCls);\n        }\n      } else if (b.length === 1) {\n        // Fast path when b have 1 class.\n        bCls = b[0];\n        unchangedPosition = -1;\n        for (i = 0; i < a.length; i++) {\n          aCls = a[i];\n          if (aCls === bCls) {\n            unchangedPosition = i;\n            break;\n          } else {\n            classList.remove(aCls);\n          }\n        }\n        if (unchangedPosition !== -1) {\n          for (i = unchangedPosition + 1; i < a.length; i++) {\n            classList.remove(a[i]);\n          }\n        } else {\n          classList.add(bCls);\n        }\n      } else {\n        // a and b have more than 1 class.\n        var aStart = 0;\n        var bStart = 0;\n        var aEnd = a.length - 1;\n        var bEnd = b.length - 1;\n        var removed = false;\n        var j;\n\n        while (aStart <= aEnd && bStart <= bEnd) {\n          if (a[aStart] !== b[bStart]) {\n            break;\n          }\n\n          aStart++;\n          bStart++;\n        }\n\n        while (aStart <= aEnd && bStart <= bEnd) {\n          if (a[aEnd] !== b[bEnd]) {\n            break;\n          }\n\n          aEnd--;\n          bEnd--;\n        }\n\n        var visited = new Array(bEnd - bStart + 1);\n\n        for (i = aStart; i <= aEnd; i++) {\n          aCls = a[i];\n          removed = true;\n\n          for (j = bStart; j <= bEnd; j++) {\n            bCls = b[j];\n\n            if (aCls == bCls) {\n              removed = false;\n              visited[j - bStart] = true;\n              break;\n            }\n          }\n\n          if (removed) {\n            classList.remove(aCls);\n          }\n        }\n\n        for (i = bStart; i <= bEnd; i++) {\n          if (!visited[i - bStart]) {\n            classList.add(b[i]);\n          }\n        }\n      }\n    }\n  } else if (b != null && b.length > 0) {\n    // a is empty, insert all classes from b.\n    for (i = 0; i < b.length; i++) {\n      classList.add(b[i]);\n    }\n  }\n}\n\nfunction disposeVNode(node) {\n  if ((node.flags & V_COMPONENT) !== 0) {\n    disposeComponent(node.cref);\n  } else if (node.children != null) {\n    for (var i = 0; i < node.children.length; i++) {\n      disposeVNode(node.children[i]);\n    }\n  }\n}\n\n/**\n * Insert VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to insert.\n * @param {Node} nextRef Reference to the next html element.\n * @param {Component} context Current context.\n */\nfunction vNodeInsertChild(parent, node, nextRef, context) {\n  createVNode(node, context);\n  parent.ref.insertBefore(node.ref, nextRef);\n  renderVNode(node, context);\n}\n\n/**\n * Move VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to move.\n * @param {Node} nextRef Reference to the next html element.\n */\nfunction vNodeMoveChild(parent, node, nextRef) {\n  parent.ref.insertBefore(node.ref, nextRef);\n}\n\n/**\n * Remove VNode.\n *\n * @param {VNode} parent Parent node.\n * @param {VNode} node Node to remove.\n */\nfunction vNodeRemoveChild(parent, node) {\n  parent.ref.removeChild(node.ref);\n  disposeVNode(node);\n}\n\n/**\n * Update children [a] and [b] in the [parent].\n *\n * If one of the children has [:null:] key, it will run updateVNode\n * algorithm for children with implicit keys, otherwise it will run\n * updateVNode algorithm for children with explicit keys.\n *\n * Mixing children with explicit and implicit keys in one children\n * list will result in undefined behaviour. In development mode it\n * will be checked for this conditions and if it is detected that\n * there are children with implicit and explicit keys, it will result\n * in runtime error.\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateChildren(parent, a, b, context) {\n  var aNode;\n  var bNode;\n  var i = 0;\n  var updated = false;\n\n  if (a != null && a.length !== 0) {\n    if (b == null || b.length === 0) {\n      // b is empty, remove all children from a.\n      while(i < a.length) {\n        vNodeRemoveChild(parent, a[i++]);\n      }\n    } else {\n      if (a.length === 1 && b.length === 1) {\n        // Fast path when a and b have only one child.\n        aNode = a[0];\n        bNode = b[0];\n\n        // Implicit key with same type or explicit key with same key.\n        if ((aNode.key == null && vNodeSameType(aNode, bNode)) ||\n            (aNode.key != null && aNode.key === bNode.key)) {\n          updateVNode(aNode, bNode, context);\n        } else {\n          vNodeRemoveChild(parent, aNode);\n          vNodeInsertChild(parent, bNode, null, context);\n        }\n      } else if (a.length === 1) {\n        // Fast path when a have 1 child.\n        aNode = a[0];\n        if (aNode.key == null) {\n          while (i < b.length) {\n            bNode = b[i++];\n            if (vNodeSameType(aNode, bNode)) {\n              updateVNode(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeInsertChild(parent, bNode, aNode.ref, context);\n          }\n        } else {\n          while (i < b.length) {\n            bNode = b[i++];\n            if (aNode.key === bNode.key) {\n              updateVNode(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeInsertChild(parent, bNode, aNode.ref, context);\n          }\n        }\n        if (updated) {\n          while (i < b.length) {\n            vNodeInsertChild(parent, b[i++], null, context);\n          }\n        } else {\n          vNodeRemoveChild(parent, aNode);\n        }\n      } else if (b.length === 1) {\n        // Fast path when b have 1 child.\n        bNode = b[0];\n        if (bNode.key == null) {\n          while (i < a.length) {\n            aNode = a[i++];\n            if (vNodeSameType(aNode, bNode)) {\n              updateVNode(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeRemoveChild(parent, aNode);\n          }\n        } else {\n          while (i < a.length) {\n            aNode = a[i++];\n            if (aNode.key === bNode.key) {\n              updateVNode(aNode, bNode, context);\n              updated = true;\n              break;\n            }\n            vNodeRemoveChild(parent, aNode);\n          }\n        }\n\n        if (updated) {\n          while (i < a.length) {\n            vNodeRemoveChild(parent, a[i++]);\n          }\n        } else {\n          vNodeInsertChild(parent, bNode, null, context);\n        }\n      } else {\n        // a and b have more than 1 child.\n        if (a[0].key == null) {\n          updateImplicitChildren(parent, a, b, context);\n        } else {\n          updateExplicitChildren(parent, a, b, context);\n        }\n      }\n    }\n  } else if (b != null && b.length > 0) {\n    // a is empty, insert all children from b\n    for (i = 0; i < b.length; i++) {\n      vNodeInsertChild(parent, b[i], null, context);\n    }\n  }\n}\n\n/**\n * Update children with implicit keys [a] and [b] in the [parent].\n *\n * Any heuristics that is used in this algorithm is an undefined\n * behaviour, and external dependencies should not relay on the\n * knowledge about this algorithm, because it can be changed in any\n * time.\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateImplicitChildren(parent, a, b, context) {\n  var aStart = 0;\n  var bStart = 0;\n  var aEnd = a.length - 1;\n  var bEnd = b.length - 1;\n  var aNode;\n  var bNode;\n  var nextPos;\n  var next;\n\n  // Update nodes with the same type at the beginning.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aStart];\n    bNode = b[bStart];\n\n    if (!vNodeSameType(aNode, bNode)) {\n      break;\n    }\n\n    aStart++;\n    bStart++;\n\n    updateVNode(aNode, bNode, context);\n  }\n\n  // Update nodes with the same type at the end.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aEnd];\n    bNode = b[bEnd];\n\n    if (!vNodeSameType(aNode, bNode)) {\n      break;\n    }\n\n    aEnd--;\n    bEnd--;\n\n    updateVNode(aNode, bNode, context);\n  }\n\n  // Iterate through the remaining nodes and if they have the same\n  // type, then updateVNode, otherwise just remove the old node and insert\n  // the new one.\n  while (aStart <= aEnd && bStart <= bEnd) {\n    aNode = a[aStart++];\n    bNode = b[bStart++];\n    if (vNodeSameType(aNode, bNode)) {\n      updateVNode(aNode, bNode, context);\n    } else {\n      vNodeInsertChild(parent, bNode, aNode.ref, context);\n      vNodeRemoveChild(parent, aNode);\n    }\n  }\n\n  // All nodes from a are updated, insert the rest from b.\n  while (aStart <= aEnd) {\n    vNodeRemoveChild(parent, a[aStart++]);\n  }\n\n  nextPos = bEnd + 1;\n  next = nextPos < b.length ? b[nextPos].ref : null;\n\n  // All nodes from b are updated, remove the rest from a.\n  while (bStart <= bEnd) {\n    vNodeInsertChild(parent, b[bStart++], next, context);\n  }\n}\n\n/**\n * Update children with explicit keys [a] and [b] in the [parent].\n *\n * @param {VNode} parent Parent.\n * @param {Array.<VNode>} a Old children list.\n * @param {Array.<VNode>} b New children list.\n * @param {Context} context Current context.\n */\nfunction updateExplicitChildren(parent, a, b, context) {\n  var aStart = 0;\n  var bStart = 0;\n  var aEnd = a.length - 1;\n  var bEnd = b.length - 1;\n  var aStartNode = a[aStart];\n  var bStartNode = b[bStart];\n  var aEndNode = a[aEnd];\n  var bEndNode = b[bEnd];\n  var i;\n  var j;\n  var stop = false;\n  var nextPos;\n  var next;\n  var aNode;\n  var bNode;\n  var lastTarget = 0;\n  var pos;\n  var node;\n\n  // Algorithm that works on simple cases with basic list\n  // transformations.\n  //\n  // It tries to reduce the diff problem by simultaneously iterating\n  // from the beginning and the end of both lists, if keys are the\n  // same, they're updated, if node is moved from the beginning to the\n  // end of the current cursor positions or vice versa it just\n  // performs move operation and continues to reduce the diff problem.\n  outer: do {\n    stop = true;\n\n    // Update nodes with the same key at the beginning.\n    while (aStartNode.key === bStartNode.key) {\n      updateVNode(aStartNode, bStartNode, context);\n      aStart++;\n      bStart++;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aStartNode = a[aStart];\n      bStartNode = b[bStart];\n      stop = false;\n    }\n\n    // Update nodes with the same key at the end.\n    while (aEndNode.key === bEndNode.key) {\n      updateVNode(aEndNode, bEndNode, context);\n      aEnd--;\n      bEnd--;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aEndNode = a[aEnd];\n      bEndNode = b[bEnd];\n      stop = false;\n    }\n\n    // Move nodes from left to right.\n    while (aStartNode.key === bEndNode.key) {\n      updateVNode(aStartNode, bEndNode, context);\n      nextPos = bEnd + 1;\n      next = nextPos < b.length ? b[nextPos].ref : null;\n      vNodeMoveChild(parent, bEndNode, next);\n      aStart++;\n      bEnd--;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aStartNode = a[aStart];\n      bEndNode = b[bEnd];\n      stop = false;\n      continue outer;\n    }\n\n    // Move nodes from right to left.\n    while (aEndNode.key === bStartNode.key) {\n      updateVNode(aEndNode, bStartNode, context);\n      vNodeMoveChild(parent, bStartNode, aStartNode.ref);\n      aEnd--;\n      bStart++;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aEndNode = a[aEnd];\n      bStartNode = b[bStart];\n      stop = false;\n    }\n  } while (!stop && aStart <= aEnd && bStart <= bEnd);\n\n  if (aStart > aEnd) {\n    // All nodes from a are updated, insert the rest from b.\n    nextPos = bEnd + 1;\n    next = nextPos < b.length ? b[nextPos].ref : null;\n    while (bStart <= bEnd) {\n      vNodeInsertChild(parent, b[bStart++], next, context);\n    }\n  } else if (bStart > bEnd) {\n    // All nodes from b are updated, remove the rest from a.\n    while (aStart <= aEnd) {\n      vNodeRemoveChild(parent, a[aStart++]);\n    }\n  } else {\n    // Perform more complex updateVNode algorithm on the remaining nodes.\n    //\n    // We start by marking all nodes from b as inserted, then we try\n    // to find all removed nodes and simultaneously perform updates on\n    // the nodes that exists in both lists and replacing \"inserted\"\n    // marks with the position of the node from the list b in list a.\n    // Then we just need to perform slightly modified LIS algorithm,\n    // that ignores \"inserted\" marks and find common subsequence and\n    // move all nodes that doesn't belong to this subsequence, or\n    // insert if they have \"inserted\" mark.\n    var aLength = aEnd - aStart + 1;\n    var bLength = bEnd - bStart + 1;\n    var sources = new Array(bLength);\n\n    // Mark all nodes as inserted.\n    for (i = 0; i < bLength; i++) {\n      sources[i] = -1;\n    }\n\n    var moved = false;\n    var removeOffset = 0;\n\n    // When lists a and b are small, we are using naive O(M*N) algorithm\n    // to find removed children.\n    if (aLength * bLength <= 16) {\n      for (i = aStart; i <= aEnd; i++) {\n        var removed = true;\n        aNode = a[i];\n        for (j = bStart; j <= bEnd; j++) {\n          bNode = b[j];\n          if (aNode.key === bNode.key) {\n            sources[j - bStart] = i;\n\n            if (lastTarget > j) {\n              moved = true;\n            } else {\n              lastTarget = j;\n            }\n            updateVNode(aNode, bNode, context);\n            removed = false;\n            break;\n          }\n        }\n        if (removed) {\n          vNodeRemoveChild(parent, aNode);\n          removeOffset++;\n        }\n      }\n    } else {\n      var keyIndex = {};\n\n      for (i = bStart; i <= bEnd; i++) {\n        node = b[i];\n        keyIndex[node.key] = i;\n      }\n\n      for (i = aStart; i <= aEnd; i++) {\n        aNode = a[i];\n        j = keyIndex[aNode.key];\n\n        if (j !== void 0) {\n          bNode = b[j];\n          sources[j - bStart] = i;\n          if (lastTarget > j) {\n            moved = true;\n          } else {\n            lastTarget = j;\n          }\n          updateVNode(aNode, bNode, context);\n        } else {\n          vNodeRemoveChild(parent, aNode);\n          removeOffset++;\n        }\n      }\n    }\n\n    if (moved) {\n      var seq = _lis(sources);\n      // All modifications are performed from the right to left, so we\n      // can use insertBefore method and use reference to the html\n      // element from the next VNode. All Nodes from the right side\n      // should always be in the correct state.\n      j = seq.length - 1;\n      for (i = bLength - 1; i >= 0; i--) {\n        if (sources[i] === -1) {\n          pos = i + bStart;\n          node = b[pos];\n          nextPos = pos + 1;\n          next = nextPos < b.length ? b[nextPos].ref : null;\n          vNodeInsertChild(parent, node, next, context);\n        } else {\n          if (j < 0 || i != seq[j]) {\n            pos = i + bStart;\n            node = b[pos];\n            nextPos = pos + 1;\n            next = nextPos < b.length ? b[nextPos].ref : null;\n            vNodeMoveChild(parent, node, next);\n          } else {\n            j--;\n          }\n        }\n      }\n    } else if (aLength - removeOffset != bLength) {\n      for (i = bLength - 1; i >= 0; i--) {\n        if (sources[i] === -1) {\n          pos = i + bStart;\n          node = b[pos];\n          nextPos = pos + 1;\n          next = nextPos < b.length ? b[nextPos].ref : null;\n          vNodeInsertChild(parent, node, next, context);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it\n * ignores items that have -1 value. They're representing new items.\n *\n * This algorithm is used to find minimum number of move operations\n * when updating children with explicit keys.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param {Array.<number>} a\n * @return {Array.<number>}\n */\nfunction _lis(a) {\n  var p = a.slice(0);\n  var result = [0];\n  var i, il;\n  var j;\n  var u;\n  var v;\n  var c;\n\n  for (i = 0, il = a.length; i < il; i++) {\n    if (a[i] === -1) {\n      continue;\n    }\n\n    j = result[result.length - 1];\n    if (a[j] < a[i]) {\n      p[i] = j;\n      result.push(i);\n      continue;\n    }\n\n    u = 0;\n    v = result.length - 1;\n\n    while (u < v) {\n      c = ((u + v) / 2) | 0;\n      if (a[result[c]] < a[i]) {\n        u = c + 1;\n      } else {\n        v = c;\n      }\n    }\n\n    if (a[i] < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Components\n */\nfunction CDescriptor(flags, tag, init, setData, update, invalidated, disposed) {\n  this.flags = flags;\n  this.tag = tag;\n  this.init = init;\n  this.setData = setData;\n  this.update = update;\n  this.invalidated = invalidated;\n  this.disposed = disposed;\n}\n\nfunction decl(spec) {\n  var flags = 0;\n  var tag = spec.tag;\n  var init = spec.init;\n  var setData = spec.setData;\n  var update = spec.update;\n  var invalidated = spec.invalidated;\n  var disposed = spec.disposed;\n\n  if (tag === void 0) tag = 'div';\n  if (init === void 0) init = null;\n  if (setData === void 0) setData = ComponentSetData;\n  if (update === void 0) update = null;\n  if (invalidated === void 0) invalidated = null;\n  if (disposed === void 0) disposed = null;\n\n  return new CDescriptor(flags, tag, init, setData, update, invalidated, disposed);\n}\n\nvar C_DIRTY = 1;\nvar C_ATTACHED = 2;\nvar C_SVG = 4;\nvar C_MOUNTING = 8;\nvar C_SHOULD_UPDATE_FLAGS = C_DIRTY | C_ATTACHED;\n\nfunction Component(descriptor, parent, data, children) {\n  this.flags = C_SHOULD_UPDATE_FLAGS;\n  this.descriptor = descriptor;\n  this.parent = parent;\n  this.depth = parent == null ? 0 : parent.depth + 1;\n  this.data = data;\n  this.children = children;\n  this.state = null;\n\n  /**\n   * Root node in the Components virtual tree.\n   * @type {VNode}\n   */\n  this.root = null;\n\n  /**\n   * Reference to the Html Element.\n   * @type {HTMLElement}\n   */\n  this.element = document.createElement(descriptor.tag);\n\n  this._update = null;\n}\n\nComponent.DIRTY = C_DIRTY;\nComponent.ATTACHED = C_ATTACHED;\nComponent.SVG = C_SVG;\nComponent.MOUNTING = C_MOUNTING;\nComponent.SHOULD_UPDATE_FLAGS = C_SHOULD_UPDATE_FLAGS;\n\n/**\n * Update internal tree using virtual dom representation.\n *\n * If this method is called during [isMounting] phase, then virtual dom\n * will be mounted on top of existing html tree.\n */\nComponent.prototype.updateRoot = function(newRoot) {\n  if (this.root == null) {\n    newRoot.cref = this;\n    if ((this.flags & C_MOUNTING) !== 0) {\n      vNodeMount(this.element, this);\n      this.flags &= ~C_MOUNTING;\n    } else {\n      newRoot.ref = this.element;\n      renderVNode(newRoot, this);\n    }\n  } else {\n    updateVNode(this.root, newRoot, this);\n  }\n  this.root = newRoot;\n};\n\n/**\n * Invalidate [Component].\n *\n * Component will be marked as dirty and added to the updateVNode queue. All\n * transient subscriptions will be canceled immediately.\n */\nComponent.prototype.invalidate = function() {\n  if ((this.flags & C_DIRTY) === 0) {\n    var scheduler = ENV.scheduler;\n\n    this.flags |= C_DIRTY;\n\n    if (this._update == null) {\n      var self = this;\n      this._update = function() { updateComponent(self); };\n    }\n\n    if ((scheduler.flags & Scheduler.FRAMETASK_RUNNING) === 0) {\n      scheduler.nextFrame().write(this._update, this.depth);\n    }\n  }\n};\n\nfunction createComponent(descriptor, data, children, context) {\n  var c = new Component(descriptor, context, data, children);\n  if (descriptor.init != null) {\n    descriptor.init(c);\n  }\n  return c;\n}\n\nfunction updateComponent(component) {\n  if ((component.flags & C_SHOULD_UPDATE_FLAGS) == C_SHOULD_UPDATE_FLAGS) {\n    component.descriptor.update(component);\n    component.flags &= ~C_DIRTY;\n  }\n}\n\nfunction disposeComponent(component) {\n  component.flags &= ~C_ATTACHED;\n  if (component.root != null) {\n    disposeVNode(component.root);\n  }\n  var descriptor = component.descriptor;\n  if (descriptor.disposed != null) {\n    descriptor.disposed(component);\n  }\n}\n\nfunction ComponentSetData(component, data) {\n  if (component.data !== data) {\n    component.data = data;\n    component.flags |= C_DIRTY;\n  }\n}\n\nfunction inject(descriptor, data, container) {\n  var c = createComponent(descriptor, data, null, null);\n  container.appendChild(c.element);\n  updateComponent(c);\n}\n\nmodule.exports = {\n  VNode: VNode,\n  Component: Component,\n  t: text,\n  $t: $text,\n  e: element,\n  $e: $element,\n  s: svg,\n  $s: $svg,\n  c: component,\n  $c: $component,\n  r: root,\n  decl: decl,\n  inject: inject\n};\n\n},{\"./env\":2,\"./scheduler\":4}],7:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\n\nvar Popover = require('./popover');\n\nfunction _formatElapsed(v) {\n  if (!v) return '';\n\n  var str = parseFloat(v).toFixed(2);\n\n  if (v > 60) {\n    var minutes = Math.floor(v / 60);\n    var comps = (value % 60).toFixed(2).split('.');\n    var seconds = comps[0].lpad('0', 2);\n    var ms = comps[1];\n    str = minutes + \":\" + seconds + \".\" + ms;\n  }\n\n  return str;\n}\n\nvar _IMPORTANT_CLASS = ['label-important'];\nvar _WARNING_CLASS = ['label-warning'];\nvar _SUCCESS_CLASS = ['label-success'];\n\nvar Entry = vdom.decl({\n  tag: 'tr',\n\n  update: function(c) {\n    var db = c.data.db;\n    var topFiveQueries = db.getTopFiveQueries();\n\n    var name = vdom.e('td');\n    name.type = 'dbname';\n    name.children = [vdom.t(db.name)];\n\n    var count = db.queries.length;\n\n    var qcSpan = vdom.e('span');\n    qcSpan.type = 'label';\n    qcSpan.children = [vdom.t(count)];\n    if (count >= 20) {\n      qcSpan.classes = _IMPORTANT_CLASS;\n    } else if (count >= 10) {\n      qcSpan.classes = _WARNING_CLASS;\n    } else {\n      qcSpan.classes = _SUCCESS_CLASS;\n    }\n\n    var qc = vdom.e('td');\n    qc.type = 'query-count';\n    qc.children = [qcSpan];\n\n    var children = [name, qc];\n\n    for (var i = 0; i < 5; i++) {\n      var q = topFiveQueries[i];\n      var elapsed = q.elapsed;\n      var text = vdom.t(_formatElapsed(elapsed));\n      var popover = vdom.c(Popover, {query: q.query});\n\n      var col = vdom.e('td');\n      col.type = 'Query';\n      var classes = [];\n      classes.push('elapsed');\n      if (elapsed >= 10.0) {\n        classes.push('warn_long');\n      } else if (elapsed >= 1.0) {\n        classes.push('warn');\n      } else {\n        classes.push('short');\n      }\n      col.classes = classes;\n      col.children = [text, popover];\n      children.push(col);\n    }\n\n    var root = vdom.r();\n    root.children = children;\n\n    c.updateRoot(root);\n  }\n});\n\nmodule.exports = Entry;\n\n},{\"./popover\":9,\"kivi\":3}],8:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\nvar Entry = require('./entry');\n\nvar _ROOT_CLASSES = ['table', 'table-striped', 'latest-data'];\n\nvar Main = vdom.decl({\n  tag: 'table',\n\n  init: function(c) {\n    setInterval(function() {\n      var data = c.data;\n      for (var i = 0; i < data.dbs.length; i++) {\n        data.dbs[i].update();\n      }\n      c.invalidate();\n    }, c.data.interval);\n  },\n\n  update: function(c) {\n    var dbs = c.data.dbs;\n\n    var rows = [];\n    for (var i = 0; i < dbs.length; i++) {\n      var db = dbs[i];\n      rows.push(vdom.$c(db.id, Entry, {db: db}));\n    }\n\n    var tbody = vdom.e('tbody');\n    tbody.children = rows;\n    var root = vdom.r();\n    root.classes = _ROOT_CLASSES;\n    root.children = [tbody];\n\n    c.updateRoot(root);\n  }\n});\n\nmodule.exports = Main;\n\n},{\"./entry\":7,\"kivi\":3}],9:[function(require,module,exports){\n'use strict';\n\nvar kivi = require('kivi');\nvar vdom = kivi.vdom;\n\nvar _ROOT_CLASSES = ['popover', 'left'];\n\nvar Popover = vdom.decl({\n  update: function(c) {\n    var content = vdom.e('div');\n    content.type = 'popover-content';\n    content.children = [vdom.t(c.data.query)];\n\n    var arrow = vdom.e('div');\n    arrow.type = 'arrow';\n\n    var root = vdom.r();\n    root.classes = _ROOT_CLASSES;\n    root.children = [content, arrow];\n\n    c.updateRoot(root);\n  }\n});\n\nmodule.exports = Popover;\n\n},{\"kivi\":3}],10:[function(require,module,exports){\n'use strict';\n\nfunction Query(elapsed, waiting, query) {\n  this.elapsed = elapsed;\n  this.waiting = waiting;\n  this.query = query;\n}\n\nQuery.rand = function() {\n  var elapsed = Math.random() * 15;\n  var waiting = Math.random() < 0.5;\n  var query = 'SELECT blah FROM something';\n\n  if (Math.random() < 0.2) {\n    query = '<IDLE> in transaction';\n  }\n\n  if (Math.random() < 0.1) {\n    query = 'vacuum';\n  }\n\n  return new Query(elapsed, waiting, query);\n};\n\nvar _nextId = 0;\nfunction Database(name) {\n  this.id = _nextId++;\n  this.name = name;\n  this.queries = null;\n\n  this.update();\n}\n\nDatabase.prototype.update = function() {\n  var queries = [];\n\n  var r = Math.floor((Math.random() * 10) + 1);\n  for (var j = 0; j < r; j++) {\n    queries.push(Query.rand());\n  }\n\n  this.queries = queries;\n};\n\nDatabase.prototype.getTopFiveQueries = function() {\n  var qs = this.queries.slice();\n  qs.sort(function(a, b) {\n    return a.elapsed - b.elapsed;\n  });\n  qs = qs.slice(0, 5);\n  while (qs.length < 5) {\n    qs.push(new Query(0.0, false, ''));\n  }\n  return qs;\n};\n\nmodule.exports = {\n  Query: Query,\n  Database: Database\n};\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}